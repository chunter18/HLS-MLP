-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity classify is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    activated_L2_0_V_re : IN STD_LOGIC_VECTOR (17 downto 0);
    activated_L2_1_V_re : IN STD_LOGIC_VECTOR (17 downto 0);
    activated_L2_2_V_re : IN STD_LOGIC_VECTOR (17 downto 0);
    activated_L2_3_V_re : IN STD_LOGIC_VECTOR (17 downto 0);
    activated_L2_4_V_re : IN STD_LOGIC_VECTOR (17 downto 0);
    activated_L2_5_V_re : IN STD_LOGIC_VECTOR (17 downto 0);
    activated_L2_6_V_re : IN STD_LOGIC_VECTOR (17 downto 0);
    activated_L2_7_V_re : IN STD_LOGIC_VECTOR (17 downto 0);
    activated_L2_8_V_re : IN STD_LOGIC_VECTOR (17 downto 0);
    activated_L2_9_V_re : IN STD_LOGIC_VECTOR (17 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of classify is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal activated_L2_9_V_re_1_reg_294 : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_9_V_re_1_reg_294_pp0_iter1_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_9_V_re_1_reg_294_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_9_V_re_1_reg_294_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_9_V_re_1_reg_294_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_8_V_re_1_reg_299 : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_8_V_re_1_reg_299_pp0_iter1_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_8_V_re_1_reg_299_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_8_V_re_1_reg_299_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_8_V_re_1_reg_299_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_7_V_re_1_reg_305 : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_7_V_re_1_reg_305_pp0_iter1_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_7_V_re_1_reg_305_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_7_V_re_1_reg_305_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_6_V_re_1_reg_311 : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_6_V_re_1_reg_311_pp0_iter1_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_6_V_re_1_reg_311_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_5_V_re_1_reg_317 : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_5_V_re_1_reg_317_pp0_iter1_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_5_V_re_1_reg_317_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_4_V_re_1_reg_323 : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_4_V_re_1_reg_323_pp0_iter1_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_3_V_re_1_reg_329 : STD_LOGIC_VECTOR (17 downto 0);
    signal activated_L2_2_V_re_1_reg_335 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_55_1_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_1_reg_340 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_1_reg_340_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_1_reg_340_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal max_V_1_1_max_V_fu_116_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal max_V_1_1_max_V_reg_345 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_55_2_fu_124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_2_reg_350 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_2_reg_350_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_2_reg_350_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_3_fu_135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_3_reg_356 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_3_reg_356_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal max_V_1_3_max_V_1_2_s_fu_140_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal max_V_1_3_max_V_1_2_s_reg_362 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_55_4_fu_147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_4_reg_368 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_V_1_4_max_V_1_3_s_fu_151_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal max_V_1_4_max_V_1_3_s_reg_373 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_55_5_fu_157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_5_reg_378 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_24_fu_204_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_s_24_reg_385 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_55_6_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_6_reg_390 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_V_1_6_sel_SEBB_fu_217_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal max_V_1_6_sel_SEBB_reg_395 : STD_LOGIC_VECTOR (17 downto 0);
    signal max_V_1_7_max_V_1_6_s_fu_231_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal max_V_1_7_max_V_1_6_s_reg_401 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_s_26_fu_250_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_s_26_reg_407 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal max_V_1_2_max_V_1_1_s_fu_130_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_fu_176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_169_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_cast_cast_cast_fu_162_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_23_fu_193_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_s_22_fu_180_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_SEBB_fu_188_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_55_7_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_25_fu_237_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_cast_fu_224_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_55_8_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_V_1_8_max_V_1_7_s_fu_262_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_55_9_fu_268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_27_fu_273_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_s_28_fu_287_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv4_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
                    ap_return_preg <= p_s_28_fu_287_p3;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                activated_L2_2_V_re_1_reg_335 <= activated_L2_2_V_re;
                activated_L2_3_V_re_1_reg_329 <= activated_L2_3_V_re;
                activated_L2_4_V_re_1_reg_323 <= activated_L2_4_V_re;
                activated_L2_4_V_re_1_reg_323_pp0_iter1_reg <= activated_L2_4_V_re_1_reg_323;
                activated_L2_5_V_re_1_reg_317 <= activated_L2_5_V_re;
                activated_L2_5_V_re_1_reg_317_pp0_iter1_reg <= activated_L2_5_V_re_1_reg_317;
                activated_L2_6_V_re_1_reg_311 <= activated_L2_6_V_re;
                activated_L2_6_V_re_1_reg_311_pp0_iter1_reg <= activated_L2_6_V_re_1_reg_311;
                activated_L2_7_V_re_1_reg_305 <= activated_L2_7_V_re;
                activated_L2_7_V_re_1_reg_305_pp0_iter1_reg <= activated_L2_7_V_re_1_reg_305;
                activated_L2_8_V_re_1_reg_299 <= activated_L2_8_V_re;
                activated_L2_8_V_re_1_reg_299_pp0_iter1_reg <= activated_L2_8_V_re_1_reg_299;
                activated_L2_9_V_re_1_reg_294 <= activated_L2_9_V_re;
                activated_L2_9_V_re_1_reg_294_pp0_iter1_reg <= activated_L2_9_V_re_1_reg_294;
                max_V_1_1_max_V_reg_345 <= max_V_1_1_max_V_fu_116_p3;
                max_V_1_3_max_V_1_2_s_reg_362 <= max_V_1_3_max_V_1_2_s_fu_140_p3;
                tmp_55_1_reg_340 <= tmp_55_1_fu_110_p2;
                tmp_55_1_reg_340_pp0_iter1_reg <= tmp_55_1_reg_340;
                tmp_55_2_reg_350 <= tmp_55_2_fu_124_p2;
                tmp_55_2_reg_350_pp0_iter1_reg <= tmp_55_2_reg_350;
                tmp_55_3_reg_356 <= tmp_55_3_fu_135_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                activated_L2_5_V_re_1_reg_317_pp0_iter2_reg <= activated_L2_5_V_re_1_reg_317_pp0_iter1_reg;
                activated_L2_6_V_re_1_reg_311_pp0_iter2_reg <= activated_L2_6_V_re_1_reg_311_pp0_iter1_reg;
                activated_L2_7_V_re_1_reg_305_pp0_iter2_reg <= activated_L2_7_V_re_1_reg_305_pp0_iter1_reg;
                activated_L2_7_V_re_1_reg_305_pp0_iter3_reg <= activated_L2_7_V_re_1_reg_305_pp0_iter2_reg;
                activated_L2_8_V_re_1_reg_299_pp0_iter2_reg <= activated_L2_8_V_re_1_reg_299_pp0_iter1_reg;
                activated_L2_8_V_re_1_reg_299_pp0_iter3_reg <= activated_L2_8_V_re_1_reg_299_pp0_iter2_reg;
                activated_L2_8_V_re_1_reg_299_pp0_iter4_reg <= activated_L2_8_V_re_1_reg_299_pp0_iter3_reg;
                activated_L2_9_V_re_1_reg_294_pp0_iter2_reg <= activated_L2_9_V_re_1_reg_294_pp0_iter1_reg;
                activated_L2_9_V_re_1_reg_294_pp0_iter3_reg <= activated_L2_9_V_re_1_reg_294_pp0_iter2_reg;
                activated_L2_9_V_re_1_reg_294_pp0_iter4_reg <= activated_L2_9_V_re_1_reg_294_pp0_iter3_reg;
                max_V_1_4_max_V_1_3_s_reg_373 <= max_V_1_4_max_V_1_3_s_fu_151_p3;
                max_V_1_6_sel_SEBB_reg_395 <= max_V_1_6_sel_SEBB_fu_217_p3;
                max_V_1_7_max_V_1_6_s_reg_401 <= max_V_1_7_max_V_1_6_s_fu_231_p3;
                p_s_24_reg_385 <= p_s_24_fu_204_p3;
                p_s_26_reg_407 <= p_s_26_fu_250_p3;
                tmp_55_1_reg_340_pp0_iter2_reg <= tmp_55_1_reg_340_pp0_iter1_reg;
                tmp_55_2_reg_350_pp0_iter2_reg <= tmp_55_2_reg_350_pp0_iter1_reg;
                tmp_55_3_reg_356_pp0_iter2_reg <= tmp_55_3_reg_356;
                tmp_55_4_reg_368 <= tmp_55_4_fu_147_p2;
                tmp_55_5_reg_378 <= tmp_55_5_fu_157_p2;
                tmp_55_6_reg_390 <= tmp_55_6_fu_212_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to4)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, p_s_28_fu_287_p3, ap_return_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_return <= p_s_28_fu_287_p3;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    max_V_1_1_max_V_fu_116_p3 <= 
        activated_L2_1_V_re when (tmp_55_1_fu_110_p2(0) = '1') else 
        activated_L2_0_V_re;
    max_V_1_2_max_V_1_1_s_fu_130_p3 <= 
        activated_L2_2_V_re_1_reg_335 when (tmp_55_2_reg_350(0) = '1') else 
        max_V_1_1_max_V_reg_345;
    max_V_1_3_max_V_1_2_s_fu_140_p3 <= 
        activated_L2_3_V_re_1_reg_329 when (tmp_55_3_fu_135_p2(0) = '1') else 
        max_V_1_2_max_V_1_1_s_fu_130_p3;
    max_V_1_4_max_V_1_3_s_fu_151_p3 <= 
        activated_L2_4_V_re_1_reg_323_pp0_iter1_reg when (tmp_55_4_fu_147_p2(0) = '1') else 
        max_V_1_3_max_V_1_2_s_reg_362;
    max_V_1_6_sel_SEBB_fu_217_p3 <= 
        activated_L2_6_V_re_1_reg_311_pp0_iter2_reg when (tmp_55_6_fu_212_p2(0) = '1') else 
        sel_SEBB_fu_188_p3;
    max_V_1_7_max_V_1_6_s_fu_231_p3 <= 
        activated_L2_7_V_re_1_reg_305_pp0_iter3_reg when (tmp_55_7_fu_227_p2(0) = '1') else 
        max_V_1_6_sel_SEBB_reg_395;
    max_V_1_8_max_V_1_7_s_fu_262_p3 <= 
        activated_L2_8_V_re_1_reg_299_pp0_iter4_reg when (tmp_55_8_fu_258_p2(0) = '1') else 
        max_V_1_7_max_V_1_6_s_reg_401;
    p_cast_cast_cast_fu_162_p3 <= 
        ap_const_lv3_2 when (tmp_55_1_reg_340_pp0_iter2_reg(0) = '1') else 
        ap_const_lv3_1;
    p_cast_fu_224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_s_24_reg_385),4));
    p_s_22_fu_180_p3 <= 
        p_s_fu_169_p3 when (tmp_fu_176_p2(0) = '1') else 
        p_cast_cast_cast_fu_162_p3;
    p_s_23_fu_193_p3 <= 
        ap_const_lv3_6 when (tmp_55_5_reg_378(0) = '1') else 
        ap_const_lv3_5;
    p_s_24_fu_204_p3 <= 
        p_s_23_fu_193_p3 when (tmp_s_fu_200_p2(0) = '1') else 
        p_s_22_fu_180_p3;
    p_s_25_fu_237_p3 <= 
        ap_const_lv4_8 when (tmp_55_7_fu_227_p2(0) = '1') else 
        ap_const_lv4_7;
    p_s_26_fu_250_p3 <= 
        p_s_25_fu_237_p3 when (tmp_12_fu_245_p2(0) = '1') else 
        p_cast_fu_224_p1;
    p_s_27_fu_273_p3 <= 
        ap_const_lv4_A when (tmp_55_9_fu_268_p2(0) = '1') else 
        ap_const_lv4_9;
    p_s_28_fu_287_p3 <= 
        p_s_27_fu_273_p3 when (tmp_13_fu_281_p2(0) = '1') else 
        p_s_26_reg_407;
    p_s_fu_169_p3 <= 
        ap_const_lv3_4 when (tmp_55_3_reg_356_pp0_iter2_reg(0) = '1') else 
        ap_const_lv3_3;
    sel_SEBB_fu_188_p3 <= 
        activated_L2_5_V_re_1_reg_317_pp0_iter2_reg when (tmp_55_5_reg_378(0) = '1') else 
        max_V_1_4_max_V_1_3_s_reg_373;
    tmp_12_fu_245_p2 <= (tmp_55_7_fu_227_p2 or tmp_55_6_reg_390);
    tmp_13_fu_281_p2 <= (tmp_55_9_fu_268_p2 or tmp_55_8_fu_258_p2);
    tmp_55_1_fu_110_p2 <= "1" when (signed(activated_L2_1_V_re) > signed(activated_L2_0_V_re)) else "0";
    tmp_55_2_fu_124_p2 <= "1" when (signed(max_V_1_1_max_V_fu_116_p3) < signed(activated_L2_2_V_re)) else "0";
    tmp_55_3_fu_135_p2 <= "1" when (signed(max_V_1_2_max_V_1_1_s_fu_130_p3) < signed(activated_L2_3_V_re_1_reg_329)) else "0";
    tmp_55_4_fu_147_p2 <= "1" when (signed(max_V_1_3_max_V_1_2_s_reg_362) < signed(activated_L2_4_V_re_1_reg_323_pp0_iter1_reg)) else "0";
    tmp_55_5_fu_157_p2 <= "1" when (signed(max_V_1_4_max_V_1_3_s_fu_151_p3) < signed(activated_L2_5_V_re_1_reg_317_pp0_iter1_reg)) else "0";
    tmp_55_6_fu_212_p2 <= "1" when (signed(sel_SEBB_fu_188_p3) < signed(activated_L2_6_V_re_1_reg_311_pp0_iter2_reg)) else "0";
    tmp_55_7_fu_227_p2 <= "1" when (signed(max_V_1_6_sel_SEBB_reg_395) < signed(activated_L2_7_V_re_1_reg_305_pp0_iter3_reg)) else "0";
    tmp_55_8_fu_258_p2 <= "1" when (signed(max_V_1_7_max_V_1_6_s_reg_401) < signed(activated_L2_8_V_re_1_reg_299_pp0_iter4_reg)) else "0";
    tmp_55_9_fu_268_p2 <= "1" when (signed(max_V_1_8_max_V_1_7_s_fu_262_p3) < signed(activated_L2_9_V_re_1_reg_294_pp0_iter4_reg)) else "0";
    tmp_fu_176_p2 <= (tmp_55_3_reg_356_pp0_iter2_reg or tmp_55_2_reg_350_pp0_iter2_reg);
    tmp_s_fu_200_p2 <= (tmp_55_5_reg_378 or tmp_55_4_reg_368);
end behav;
