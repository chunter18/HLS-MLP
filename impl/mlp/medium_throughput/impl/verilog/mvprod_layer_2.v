// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mvprod_layer_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        matrix_V_address0,
        matrix_V_ce0,
        matrix_V_q0,
        matrix_V_address1,
        matrix_V_ce1,
        matrix_V_q1,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        input_V_address1,
        input_V_ce1,
        input_V_q1,
        result_V_address0,
        result_V_ce0,
        result_V_we0,
        result_V_d0
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_pp0_stage0 = 27'd2;
parameter    ap_ST_fsm_pp0_stage1 = 27'd4;
parameter    ap_ST_fsm_pp0_stage2 = 27'd8;
parameter    ap_ST_fsm_pp0_stage3 = 27'd16;
parameter    ap_ST_fsm_pp0_stage4 = 27'd32;
parameter    ap_ST_fsm_pp0_stage5 = 27'd64;
parameter    ap_ST_fsm_pp0_stage6 = 27'd128;
parameter    ap_ST_fsm_pp0_stage7 = 27'd256;
parameter    ap_ST_fsm_pp0_stage8 = 27'd512;
parameter    ap_ST_fsm_pp0_stage9 = 27'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 27'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 27'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 27'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 27'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 27'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 27'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 27'd131072;
parameter    ap_ST_fsm_pp0_stage17 = 27'd262144;
parameter    ap_ST_fsm_pp0_stage18 = 27'd524288;
parameter    ap_ST_fsm_pp0_stage19 = 27'd1048576;
parameter    ap_ST_fsm_pp0_stage20 = 27'd2097152;
parameter    ap_ST_fsm_pp0_stage21 = 27'd4194304;
parameter    ap_ST_fsm_pp0_stage22 = 27'd8388608;
parameter    ap_ST_fsm_pp0_stage23 = 27'd16777216;
parameter    ap_ST_fsm_pp0_stage24 = 27'd33554432;
parameter    ap_ST_fsm_pp0_stage25 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [8:0] matrix_V_address0;
output   matrix_V_ce0;
input  [17:0] matrix_V_q0;
output  [8:0] matrix_V_address1;
output   matrix_V_ce1;
input  [17:0] matrix_V_q1;
output  [4:0] input_V_address0;
output   input_V_ce0;
input  [17:0] input_V_q0;
output  [4:0] input_V_address1;
output   input_V_ce1;
input  [17:0] input_V_q1;
output  [3:0] result_V_address0;
output   result_V_ce0;
output   result_V_we0;
output  [17:0] result_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] matrix_V_address0;
reg matrix_V_ce0;
reg[8:0] matrix_V_address1;
reg matrix_V_ce1;
reg[4:0] input_V_address0;
reg input_V_ce0;
reg[4:0] input_V_address1;
reg input_V_ce1;
reg result_V_ce0;
reg result_V_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] tmp_fu_1818_p2;
wire    ap_CS_fsm_pp0_stage25;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state27_pp0_stage25_iter0;
wire    ap_block_pp0_stage25_11001;
reg   [7:0] phi_mul_reg_629;
reg   [3:0] m1_reg_660;
reg   [17:0] reg_761;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state29_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state30_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
reg   [17:0] reg_765;
reg   [17:0] reg_769;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state31_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state14_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
reg   [17:0] reg_774;
reg   [17:0] reg_779;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
reg   [17:0] reg_784;
reg   [17:0] reg_789;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
reg   [17:0] reg_794;
wire   [34:0] grp_fu_675_p2;
reg   [34:0] reg_799;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state13_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state15_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state16_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state17_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state18_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_11001;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state19_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_11001;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state20_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_11001;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state21_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_11001;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_state22_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_11001;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_state23_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_11001;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_state24_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_11001;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_state25_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_11001;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_state26_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state28_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [17:0] reg_803;
reg   [17:0] reg_808;
reg   [17:0] reg_813;
reg   [17:0] reg_818;
reg   [17:0] reg_823;
reg   [17:0] reg_828;
wire   [7:0] tmp_5_fu_849_p2;
reg   [7:0] tmp_5_reg_1958;
wire   [7:0] tmp_6_fu_855_p2;
reg   [7:0] tmp_6_reg_1963;
wire   [7:0] tmp_7_fu_869_p2;
reg   [7:0] tmp_7_reg_1988;
wire   [7:0] tmp_9_fu_875_p2;
reg   [7:0] tmp_9_reg_1993;
wire   [7:0] tmp_10_fu_889_p2;
reg   [7:0] tmp_10_reg_2018;
wire   [7:0] tmp_11_fu_895_p2;
reg   [7:0] tmp_11_reg_2023;
wire  signed [34:0] OP1_V_cast_fu_901_p1;
wire  signed [34:0] OP2_V_cast_fu_906_p1;
wire   [7:0] tmp_12_fu_919_p2;
reg   [7:0] tmp_12_reg_2058;
wire   [7:0] tmp_13_fu_925_p2;
reg   [7:0] tmp_13_reg_2063;
wire  signed [34:0] OP1_V_1_fu_931_p1;
wire  signed [34:0] OP2_V_1_fu_936_p1;
reg   [17:0] tmp_30_reg_2078;
wire   [7:0] tmp_14_fu_959_p2;
reg   [7:0] tmp_14_reg_2103;
wire   [7:0] tmp_15_fu_965_p2;
reg   [7:0] tmp_15_reg_2108;
wire  signed [34:0] OP1_V_2_fu_971_p1;
wire  signed [34:0] OP2_V_2_fu_976_p1;
wire   [7:0] tmp_16_fu_989_p2;
reg   [7:0] tmp_16_reg_2143;
wire   [7:0] tmp_17_fu_995_p2;
reg   [7:0] tmp_17_reg_2148;
reg   [17:0] tmp_31_reg_2153;
wire  signed [34:0] OP1_V_3_fu_1024_p1;
wire  signed [34:0] OP2_V_3_fu_1029_p1;
wire   [7:0] tmp_18_fu_1042_p2;
reg   [7:0] tmp_18_reg_2188;
wire   [7:0] tmp_19_fu_1048_p2;
reg   [7:0] tmp_19_reg_2193;
reg   [17:0] tmp_32_reg_2198;
wire  signed [34:0] OP1_V_4_fu_1077_p1;
wire  signed [34:0] OP2_V_4_fu_1082_p1;
wire   [7:0] tmp_20_fu_1095_p2;
reg   [7:0] tmp_20_reg_2233;
wire   [7:0] tmp_21_fu_1101_p2;
reg   [7:0] tmp_21_reg_2238;
reg   [17:0] tmp_33_reg_2243;
wire  signed [34:0] OP1_V_5_fu_1130_p1;
wire  signed [34:0] OP2_V_5_fu_1135_p1;
reg   [17:0] input_V_load_13_reg_2258;
reg   [17:0] matrix_V_load_13_reg_2263;
wire   [7:0] tmp_22_fu_1148_p2;
reg   [7:0] tmp_22_reg_2288;
wire   [7:0] tmp_23_fu_1154_p2;
reg   [7:0] tmp_23_reg_2293;
reg   [17:0] tmp_34_reg_2298;
wire  signed [34:0] OP1_V_6_fu_1183_p1;
wire  signed [34:0] OP2_V_6_fu_1188_p1;
reg   [17:0] input_V_load_15_reg_2313;
reg   [17:0] matrix_V_load_15_reg_2318;
wire   [7:0] tmp_24_fu_1201_p2;
reg   [7:0] tmp_24_reg_2343;
wire   [7:0] tmp_25_fu_1207_p2;
reg   [7:0] tmp_25_reg_2348;
reg   [17:0] tmp_35_reg_2353;
wire  signed [34:0] OP1_V_7_fu_1236_p1;
wire  signed [34:0] OP2_V_7_fu_1241_p1;
reg   [17:0] input_V_load_17_reg_2368;
reg   [17:0] matrix_V_load_17_reg_2373;
wire   [8:0] phi_mul_cast2_fu_1246_p1;
reg   [8:0] phi_mul_cast2_reg_2388;
wire   [8:0] tmp_26_fu_1258_p2;
reg   [8:0] tmp_26_reg_2404;
wire   [8:0] tmp_27_fu_1264_p2;
reg   [8:0] tmp_27_reg_2409;
reg   [17:0] tmp_36_reg_2414;
wire  signed [34:0] OP1_V_8_fu_1293_p1;
wire  signed [34:0] OP2_V_8_fu_1298_p1;
reg   [17:0] input_V_load_19_reg_2429;
reg   [17:0] matrix_V_load_19_reg_2434;
wire   [8:0] tmp_28_fu_1311_p2;
reg   [8:0] tmp_28_reg_2459;
wire   [8:0] tmp_29_fu_1316_p2;
reg   [8:0] tmp_29_reg_2464;
reg   [17:0] tmp_37_reg_2469;
wire  signed [34:0] OP1_V_9_fu_1344_p1;
wire  signed [34:0] OP2_V_9_fu_1349_p1;
reg   [17:0] input_V_load_21_reg_2484;
reg   [17:0] matrix_V_load_21_reg_2489;
reg   [17:0] tmp_38_reg_2514;
wire  signed [34:0] OP1_V_s_fu_1385_p1;
wire  signed [34:0] OP2_V_s_fu_1390_p1;
reg   [17:0] input_V_load_23_reg_2529;
reg   [17:0] matrix_V_load_23_reg_2534;
reg   [17:0] tmp_39_reg_2549;
wire  signed [34:0] OP1_V_10_fu_1418_p1;
wire  signed [34:0] OP2_V_10_fu_1423_p1;
reg   [17:0] input_V_load_25_reg_2564;
reg   [17:0] matrix_V_load_25_reg_2569;
reg   [17:0] tmp_40_reg_2574;
wire  signed [34:0] OP1_V_11_fu_1451_p1;
wire  signed [34:0] OP2_V_11_fu_1456_p1;
reg   [17:0] tmp_41_reg_2589;
wire  signed [34:0] OP1_V_12_fu_1484_p1;
wire  signed [34:0] OP2_V_12_fu_1488_p1;
reg   [17:0] tmp_42_reg_2604;
wire  signed [34:0] OP1_V_13_fu_1515_p1;
wire  signed [34:0] OP2_V_13_fu_1520_p1;
reg   [17:0] tmp_43_reg_2619;
wire  signed [34:0] OP1_V_14_fu_1548_p1;
wire  signed [34:0] OP2_V_14_fu_1552_p1;
reg   [17:0] tmp_44_reg_2634;
wire  signed [34:0] OP1_V_15_fu_1579_p1;
wire  signed [34:0] OP2_V_15_fu_1584_p1;
reg   [17:0] tmp_45_reg_2649;
wire  signed [34:0] OP1_V_16_fu_1612_p1;
wire  signed [34:0] OP2_V_16_fu_1616_p1;
reg   [17:0] tmp_46_reg_2664;
wire  signed [34:0] OP1_V_17_fu_1643_p1;
wire  signed [34:0] OP2_V_17_fu_1648_p1;
reg   [17:0] tmp_47_reg_2679;
wire  signed [34:0] OP1_V_18_fu_1676_p1;
wire  signed [34:0] OP2_V_18_fu_1680_p1;
reg   [17:0] tmp_48_reg_2694;
wire  signed [34:0] OP1_V_19_fu_1707_p1;
wire  signed [34:0] OP2_V_19_fu_1712_p1;
reg   [17:0] tmp_49_reg_2709;
wire  signed [34:0] OP1_V_20_fu_1740_p1;
wire  signed [34:0] OP2_V_20_fu_1744_p1;
reg   [17:0] tmp_50_reg_2724;
wire  signed [34:0] OP1_V_21_fu_1771_p1;
wire  signed [34:0] OP2_V_21_fu_1776_p1;
wire   [7:0] next_mul_fu_1781_p2;
reg   [7:0] next_mul_reg_2739;
reg   [17:0] tmp_51_reg_2744;
wire  signed [34:0] OP1_V_22_fu_1810_p1;
wire  signed [34:0] OP2_V_22_fu_1814_p1;
reg   [0:0] tmp_reg_2759;
reg   [17:0] tmp_52_reg_2763;
wire  signed [34:0] OP1_V_23_fu_1847_p1;
wire  signed [34:0] OP2_V_23_fu_1852_p1;
reg   [17:0] tmp_53_reg_2778;
wire  signed [34:0] OP1_V_24_fu_1880_p1;
wire  signed [34:0] OP2_V_24_fu_1884_p1;
reg   [17:0] tmp_54_reg_2793;
wire   [3:0] m_fu_1940_p2;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_state1;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage3_subdone;
reg   [7:0] ap_phi_mux_phi_mul_phi_fu_633_p6;
wire    ap_block_pp0_stage0;
wire   [63:0] phi_mul_cast_fu_833_p1;
wire   [63:0] tmp_12_cast_fu_844_p1;
wire   [63:0] tmp_13_cast_fu_861_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] tmp_14_cast_fu_865_p1;
wire   [63:0] tmp_15_cast_fu_881_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] tmp_16_cast_fu_885_p1;
wire   [63:0] tmp_17_cast_fu_911_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] tmp_18_cast_fu_915_p1;
wire   [63:0] tmp_19_cast_fu_951_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] tmp_20_cast_fu_955_p1;
wire   [63:0] tmp_21_cast_fu_981_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] tmp_22_cast_fu_985_p1;
wire   [63:0] tmp_23_cast_fu_1034_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] tmp_24_cast_fu_1038_p1;
wire   [63:0] tmp_25_cast_fu_1087_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] tmp_26_cast_fu_1091_p1;
wire   [63:0] tmp_27_cast_fu_1140_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] tmp_28_cast_fu_1144_p1;
wire   [63:0] tmp_29_cast_fu_1193_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] tmp_30_cast_fu_1197_p1;
wire   [63:0] tmp_31_cast_fu_1250_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] tmp_32_cast_fu_1254_p1;
wire   [63:0] tmp_33_cast_fu_1303_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] tmp_34_cast_fu_1307_p1;
wire   [63:0] tmp_35_cast_fu_1354_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] tmp_36_cast_fu_1358_p1;
wire   [63:0] tmp_s_fu_1911_p1;
reg  signed [17:0] grp_fu_675_p0;
reg  signed [17:0] grp_fu_675_p1;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage16;
wire    ap_block_pp0_stage17;
wire    ap_block_pp0_stage18;
wire    ap_block_pp0_stage19;
wire    ap_block_pp0_stage20;
wire    ap_block_pp0_stage21;
wire    ap_block_pp0_stage22;
wire    ap_block_pp0_stage23;
wire    ap_block_pp0_stage24;
wire    ap_block_pp0_stage25;
wire   [7:0] tmp_4_fu_838_p2;
wire   [34:0] tmp_41_1_fu_1001_p3;
wire   [34:0] p_Val2_15_1_fu_1008_p2;
wire   [34:0] tmp_41_2_fu_1054_p3;
wire   [34:0] p_Val2_15_2_fu_1061_p2;
wire   [34:0] tmp_41_3_fu_1107_p3;
wire   [34:0] p_Val2_15_3_fu_1114_p2;
wire   [34:0] tmp_41_4_fu_1160_p3;
wire   [34:0] p_Val2_15_4_fu_1167_p2;
wire   [34:0] tmp_41_5_fu_1213_p3;
wire   [34:0] p_Val2_15_5_fu_1220_p2;
wire   [34:0] tmp_41_6_fu_1270_p3;
wire   [34:0] p_Val2_15_6_fu_1277_p2;
wire   [34:0] tmp_41_7_fu_1321_p3;
wire   [34:0] p_Val2_15_7_fu_1328_p2;
wire   [34:0] tmp_41_8_fu_1362_p3;
wire   [34:0] p_Val2_15_8_fu_1369_p2;
wire   [34:0] tmp_41_9_fu_1395_p3;
wire   [34:0] p_Val2_15_9_fu_1402_p2;
wire   [34:0] tmp_41_s_fu_1428_p3;
wire   [34:0] p_Val2_15_s_fu_1435_p2;
wire   [34:0] tmp_41_10_fu_1461_p3;
wire   [34:0] p_Val2_15_10_fu_1468_p2;
wire   [34:0] tmp_41_11_fu_1492_p3;
wire   [34:0] p_Val2_15_11_fu_1499_p2;
wire   [34:0] tmp_41_12_fu_1525_p3;
wire   [34:0] p_Val2_15_12_fu_1532_p2;
wire   [34:0] tmp_41_13_fu_1556_p3;
wire   [34:0] p_Val2_15_13_fu_1563_p2;
wire   [34:0] tmp_41_14_fu_1589_p3;
wire   [34:0] p_Val2_15_14_fu_1596_p2;
wire   [34:0] tmp_41_15_fu_1620_p3;
wire   [34:0] p_Val2_15_15_fu_1627_p2;
wire   [34:0] tmp_41_16_fu_1653_p3;
wire   [34:0] p_Val2_15_16_fu_1660_p2;
wire   [34:0] tmp_41_17_fu_1684_p3;
wire   [34:0] p_Val2_15_17_fu_1691_p2;
wire   [34:0] tmp_41_18_fu_1717_p3;
wire   [34:0] p_Val2_15_18_fu_1724_p2;
wire   [34:0] tmp_41_19_fu_1748_p3;
wire   [34:0] p_Val2_15_19_fu_1755_p2;
wire   [34:0] tmp_41_20_fu_1787_p3;
wire   [34:0] p_Val2_15_20_fu_1794_p2;
wire   [34:0] tmp_41_21_fu_1824_p3;
wire   [34:0] p_Val2_15_21_fu_1831_p2;
wire   [34:0] tmp_41_22_fu_1857_p3;
wire   [34:0] p_Val2_15_22_fu_1864_p2;
wire   [34:0] tmp_41_23_fu_1888_p3;
wire   [34:0] p_Val2_15_23_fu_1895_p2;
wire   [34:0] tmp_41_24_fu_1916_p3;
wire   [34:0] p_Val2_15_24_fu_1923_p2;
reg    grp_fu_675_ce;
reg   [26:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_807;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 27'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

mlp_mul_18s_18s_3fYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 35 ))
mlp_mul_18s_18s_3fYi_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_675_p0),
    .din1(grp_fu_675_p1),
    .ce(grp_fu_675_ce),
    .dout(grp_fu_675_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((tmp_reg_2759 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage25_subdone) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_2759 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        m1_reg_660 <= m_fu_1940_p2;
    end else if (((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_reg_2759 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        m1_reg_660 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_2759 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        phi_mul_reg_629 <= next_mul_reg_2739;
    end else if (((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_reg_2759 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        phi_mul_reg_629 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_769 <= input_V_q0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        reg_769 <= input_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_774 <= matrix_V_q0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        reg_774 <= matrix_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)))) begin
        reg_779 <= input_V_q0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        reg_779 <= input_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)))) begin
        reg_784 <= matrix_V_q0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        reg_784 <= matrix_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            reg_789 <= input_V_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
            reg_789 <= input_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            reg_794 <= matrix_V_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
            reg_794 <= matrix_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            reg_803 <= input_V_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
            reg_803 <= input_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            reg_808 <= matrix_V_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
            reg_808 <= matrix_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            reg_813 <= input_V_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
            reg_813 <= input_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            reg_818 <= matrix_V_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
            reg_818 <= matrix_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            reg_823 <= input_V_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            reg_823 <= input_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            reg_828 <= matrix_V_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            reg_828 <= matrix_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        input_V_load_13_reg_2258 <= input_V_q1;
        matrix_V_load_13_reg_2263 <= matrix_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        input_V_load_15_reg_2313 <= input_V_q1;
        matrix_V_load_15_reg_2318 <= matrix_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        input_V_load_17_reg_2368 <= input_V_q1;
        matrix_V_load_17_reg_2373 <= matrix_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        input_V_load_19_reg_2429 <= input_V_q1;
        matrix_V_load_19_reg_2434 <= matrix_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        input_V_load_21_reg_2484 <= input_V_q1;
        matrix_V_load_21_reg_2489 <= matrix_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        input_V_load_23_reg_2529 <= input_V_q1;
        matrix_V_load_23_reg_2534 <= matrix_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        input_V_load_25_reg_2564 <= input_V_q1;
        matrix_V_load_25_reg_2569 <= matrix_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        next_mul_reg_2739 <= next_mul_fu_1781_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        phi_mul_cast2_reg_2388[7 : 0] <= phi_mul_cast2_fu_1246_p1[7 : 0];
        tmp_26_reg_2404 <= tmp_26_fu_1258_p2;
        tmp_27_reg_2409 <= tmp_27_fu_1264_p2;
        tmp_36_reg_2414 <= {{p_Val2_15_6_fu_1277_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_761 <= input_V_q0;
        reg_765 <= matrix_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_799 <= grp_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp_10_reg_2018 <= tmp_10_fu_889_p2;
        tmp_11_reg_2023 <= tmp_11_fu_895_p2;
        tmp_54_reg_2793 <= {{p_Val2_15_23_fu_1895_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        tmp_12_reg_2058 <= tmp_12_fu_919_p2;
        tmp_13_reg_2063 <= tmp_13_fu_925_p2;
        tmp_30_reg_2078 <= {{grp_fu_675_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        tmp_14_reg_2103 <= tmp_14_fu_959_p2;
        tmp_15_reg_2108 <= tmp_15_fu_965_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        tmp_16_reg_2143 <= tmp_16_fu_989_p2;
        tmp_17_reg_2148 <= tmp_17_fu_995_p2;
        tmp_31_reg_2153 <= {{p_Val2_15_1_fu_1008_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        tmp_18_reg_2188 <= tmp_18_fu_1042_p2;
        tmp_19_reg_2193 <= tmp_19_fu_1048_p2;
        tmp_32_reg_2198 <= {{p_Val2_15_2_fu_1061_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_20_reg_2233 <= tmp_20_fu_1095_p2;
        tmp_21_reg_2238 <= tmp_21_fu_1101_p2;
        tmp_33_reg_2243 <= {{p_Val2_15_3_fu_1114_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        tmp_22_reg_2288 <= tmp_22_fu_1148_p2;
        tmp_23_reg_2293 <= tmp_23_fu_1154_p2;
        tmp_34_reg_2298 <= {{p_Val2_15_4_fu_1167_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        tmp_24_reg_2343 <= tmp_24_fu_1201_p2;
        tmp_25_reg_2348 <= tmp_25_fu_1207_p2;
        tmp_35_reg_2353 <= {{p_Val2_15_5_fu_1220_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        tmp_28_reg_2459 <= tmp_28_fu_1311_p2;
        tmp_29_reg_2464 <= tmp_29_fu_1316_p2;
        tmp_37_reg_2469 <= {{p_Val2_15_7_fu_1328_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        tmp_38_reg_2514 <= {{p_Val2_15_8_fu_1369_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        tmp_39_reg_2549 <= {{p_Val2_15_9_fu_1402_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        tmp_40_reg_2574 <= {{p_Val2_15_s_fu_1435_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        tmp_41_reg_2589 <= {{p_Val2_15_10_fu_1468_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        tmp_42_reg_2604 <= {{p_Val2_15_11_fu_1499_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        tmp_43_reg_2619 <= {{p_Val2_15_12_fu_1532_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        tmp_44_reg_2634 <= {{p_Val2_15_13_fu_1563_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        tmp_45_reg_2649 <= {{p_Val2_15_14_fu_1596_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        tmp_46_reg_2664 <= {{p_Val2_15_15_fu_1627_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        tmp_47_reg_2679 <= {{p_Val2_15_16_fu_1660_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        tmp_48_reg_2694 <= {{p_Val2_15_17_fu_1691_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        tmp_49_reg_2709 <= {{p_Val2_15_18_fu_1724_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        tmp_50_reg_2724 <= {{p_Val2_15_19_fu_1755_p2[34:17]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        tmp_51_reg_2744 <= {{p_Val2_15_20_fu_1794_p2[34:17]}};
        tmp_reg_2759 <= tmp_fu_1818_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_52_reg_2763 <= {{p_Val2_15_21_fu_1831_p2[34:17]}};
        tmp_5_reg_1958 <= tmp_5_fu_849_p2;
        tmp_6_reg_1963 <= tmp_6_fu_855_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_53_reg_2778 <= {{p_Val2_15_22_fu_1864_p2[34:17]}};
        tmp_7_reg_1988 <= tmp_7_fu_869_p2;
        tmp_9_reg_1993 <= tmp_9_fu_875_p2;
    end
end

always @ (*) begin
    if (((tmp_reg_2759 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_807)) begin
        if ((tmp_reg_2759 == 1'd1)) begin
            ap_phi_mux_phi_mul_phi_fu_633_p6 = 8'd0;
        end else if ((tmp_reg_2759 == 1'd0)) begin
            ap_phi_mux_phi_mul_phi_fu_633_p6 = next_mul_reg_2739;
        end else begin
            ap_phi_mux_phi_mul_phi_fu_633_p6 = phi_mul_reg_629;
        end
    end else begin
        ap_phi_mux_phi_mul_phi_fu_633_p6 = phi_mul_reg_629;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage25_11001) & (tmp_fu_1818_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24)) | ((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        grp_fu_675_ce = 1'b1;
    end else begin
        grp_fu_675_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_675_p0 = OP1_V_24_fu_1880_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_675_p0 = OP1_V_23_fu_1847_p1;
    end else if (((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        grp_fu_675_p0 = OP1_V_22_fu_1810_p1;
    end else if (((1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        grp_fu_675_p0 = OP1_V_21_fu_1771_p1;
    end else if (((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        grp_fu_675_p0 = OP1_V_20_fu_1740_p1;
    end else if (((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        grp_fu_675_p0 = OP1_V_19_fu_1707_p1;
    end else if (((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        grp_fu_675_p0 = OP1_V_18_fu_1676_p1;
    end else if (((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        grp_fu_675_p0 = OP1_V_17_fu_1643_p1;
    end else if (((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        grp_fu_675_p0 = OP1_V_16_fu_1612_p1;
    end else if (((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        grp_fu_675_p0 = OP1_V_15_fu_1579_p1;
    end else if (((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        grp_fu_675_p0 = OP1_V_14_fu_1548_p1;
    end else if (((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        grp_fu_675_p0 = OP1_V_13_fu_1515_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_675_p0 = OP1_V_12_fu_1484_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_675_p0 = OP1_V_11_fu_1451_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_675_p0 = OP1_V_10_fu_1418_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_675_p0 = OP1_V_s_fu_1385_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_675_p0 = OP1_V_9_fu_1344_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_675_p0 = OP1_V_8_fu_1293_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_675_p0 = OP1_V_7_fu_1236_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_675_p0 = OP1_V_6_fu_1183_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_675_p0 = OP1_V_5_fu_1130_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_675_p0 = OP1_V_4_fu_1077_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_675_p0 = OP1_V_3_fu_1024_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_675_p0 = OP1_V_2_fu_971_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_675_p0 = OP1_V_1_fu_931_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_675_p0 = OP1_V_cast_fu_901_p1;
    end else begin
        grp_fu_675_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_675_p1 = OP2_V_24_fu_1884_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_675_p1 = OP2_V_23_fu_1852_p1;
    end else if (((1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        grp_fu_675_p1 = OP2_V_22_fu_1814_p1;
    end else if (((1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        grp_fu_675_p1 = OP2_V_21_fu_1776_p1;
    end else if (((1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        grp_fu_675_p1 = OP2_V_20_fu_1744_p1;
    end else if (((1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        grp_fu_675_p1 = OP2_V_19_fu_1712_p1;
    end else if (((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        grp_fu_675_p1 = OP2_V_18_fu_1680_p1;
    end else if (((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        grp_fu_675_p1 = OP2_V_17_fu_1648_p1;
    end else if (((1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        grp_fu_675_p1 = OP2_V_16_fu_1616_p1;
    end else if (((1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        grp_fu_675_p1 = OP2_V_15_fu_1584_p1;
    end else if (((1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        grp_fu_675_p1 = OP2_V_14_fu_1552_p1;
    end else if (((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        grp_fu_675_p1 = OP2_V_13_fu_1520_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_675_p1 = OP2_V_12_fu_1488_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_675_p1 = OP2_V_11_fu_1456_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_675_p1 = OP2_V_10_fu_1423_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_675_p1 = OP2_V_s_fu_1390_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_675_p1 = OP2_V_9_fu_1349_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_675_p1 = OP2_V_8_fu_1298_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_675_p1 = OP2_V_7_fu_1241_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_675_p1 = OP2_V_6_fu_1188_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_675_p1 = OP2_V_5_fu_1135_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_675_p1 = OP2_V_4_fu_1082_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_675_p1 = OP2_V_3_fu_1029_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_675_p1 = OP2_V_2_fu_976_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_675_p1 = OP2_V_1_fu_936_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_675_p1 = OP2_V_cast_fu_906_p1;
    end else begin
        grp_fu_675_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            input_V_address0 = 64'd24;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            input_V_address0 = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            input_V_address0 = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            input_V_address0 = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            input_V_address0 = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            input_V_address0 = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            input_V_address0 = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            input_V_address0 = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_V_address0 = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_V_address0 = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_V_address0 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_V_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_V_address0 = 64'd0;
        end else begin
            input_V_address0 = 'bx;
        end
    end else begin
        input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            input_V_address1 = 64'd25;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            input_V_address1 = 64'd23;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            input_V_address1 = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            input_V_address1 = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            input_V_address1 = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            input_V_address1 = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            input_V_address1 = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            input_V_address1 = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_V_address1 = 64'd9;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_V_address1 = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_V_address1 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_V_address1 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_V_address1 = 64'd1;
        end else begin
            input_V_address1 = 'bx;
        end
    end else begin
        input_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_V_ce1 = 1'b1;
    end else begin
        input_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            matrix_V_address0 = tmp_35_cast_fu_1354_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            matrix_V_address0 = tmp_33_cast_fu_1303_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            matrix_V_address0 = tmp_31_cast_fu_1250_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            matrix_V_address0 = tmp_29_cast_fu_1193_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            matrix_V_address0 = tmp_27_cast_fu_1140_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            matrix_V_address0 = tmp_25_cast_fu_1087_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            matrix_V_address0 = tmp_23_cast_fu_1034_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            matrix_V_address0 = tmp_21_cast_fu_981_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            matrix_V_address0 = tmp_19_cast_fu_951_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            matrix_V_address0 = tmp_17_cast_fu_911_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            matrix_V_address0 = tmp_15_cast_fu_881_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            matrix_V_address0 = tmp_13_cast_fu_861_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            matrix_V_address0 = phi_mul_cast_fu_833_p1;
        end else begin
            matrix_V_address0 = 'bx;
        end
    end else begin
        matrix_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            matrix_V_address1 = tmp_36_cast_fu_1358_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            matrix_V_address1 = tmp_34_cast_fu_1307_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            matrix_V_address1 = tmp_32_cast_fu_1254_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            matrix_V_address1 = tmp_30_cast_fu_1197_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            matrix_V_address1 = tmp_28_cast_fu_1144_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            matrix_V_address1 = tmp_26_cast_fu_1091_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            matrix_V_address1 = tmp_24_cast_fu_1038_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            matrix_V_address1 = tmp_22_cast_fu_985_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            matrix_V_address1 = tmp_20_cast_fu_955_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            matrix_V_address1 = tmp_18_cast_fu_915_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            matrix_V_address1 = tmp_16_cast_fu_885_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            matrix_V_address1 = tmp_14_cast_fu_865_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            matrix_V_address1 = tmp_12_cast_fu_844_p1;
        end else begin
            matrix_V_address1 = 'bx;
        end
    end else begin
        matrix_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        matrix_V_ce0 = 1'b1;
    end else begin
        matrix_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        matrix_V_ce1 = 1'b1;
    end else begin
        matrix_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        result_V_ce0 = 1'b1;
    end else begin
        result_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        result_V_we0 = 1'b1;
    end else begin
        result_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_10_fu_1418_p1 = $signed(reg_823);

assign OP1_V_11_fu_1451_p1 = $signed(reg_789);

assign OP1_V_12_fu_1484_p1 = $signed(input_V_load_13_reg_2258);

assign OP1_V_13_fu_1515_p1 = $signed(reg_761);

assign OP1_V_14_fu_1548_p1 = $signed(input_V_load_15_reg_2313);

assign OP1_V_15_fu_1579_p1 = $signed(reg_803);

assign OP1_V_16_fu_1612_p1 = $signed(input_V_load_17_reg_2368);

assign OP1_V_17_fu_1643_p1 = $signed(reg_779);

assign OP1_V_18_fu_1676_p1 = $signed(input_V_load_19_reg_2429);

assign OP1_V_19_fu_1707_p1 = $signed(reg_813);

assign OP1_V_1_fu_931_p1 = $signed(reg_769);

assign OP1_V_20_fu_1740_p1 = $signed(input_V_load_21_reg_2484);

assign OP1_V_21_fu_1771_p1 = $signed(reg_769);

assign OP1_V_22_fu_1810_p1 = $signed(input_V_load_23_reg_2529);

assign OP1_V_23_fu_1847_p1 = $signed(reg_823);

assign OP1_V_24_fu_1880_p1 = $signed(input_V_load_25_reg_2564);

assign OP1_V_2_fu_971_p1 = $signed(reg_761);

assign OP1_V_3_fu_1024_p1 = $signed(reg_779);

assign OP1_V_4_fu_1077_p1 = $signed(reg_769);

assign OP1_V_5_fu_1130_p1 = $signed(reg_789);

assign OP1_V_6_fu_1183_p1 = $signed(reg_761);

assign OP1_V_7_fu_1236_p1 = $signed(reg_803);

assign OP1_V_8_fu_1293_p1 = $signed(reg_779);

assign OP1_V_9_fu_1344_p1 = $signed(reg_813);

assign OP1_V_cast_fu_901_p1 = $signed(reg_761);

assign OP1_V_s_fu_1385_p1 = $signed(reg_769);

assign OP2_V_10_fu_1423_p1 = $signed(reg_828);

assign OP2_V_11_fu_1456_p1 = $signed(reg_794);

assign OP2_V_12_fu_1488_p1 = $signed(matrix_V_load_13_reg_2263);

assign OP2_V_13_fu_1520_p1 = $signed(reg_765);

assign OP2_V_14_fu_1552_p1 = $signed(matrix_V_load_15_reg_2318);

assign OP2_V_15_fu_1584_p1 = $signed(reg_808);

assign OP2_V_16_fu_1616_p1 = $signed(matrix_V_load_17_reg_2373);

assign OP2_V_17_fu_1648_p1 = $signed(reg_784);

assign OP2_V_18_fu_1680_p1 = $signed(matrix_V_load_19_reg_2434);

assign OP2_V_19_fu_1712_p1 = $signed(reg_818);

assign OP2_V_1_fu_936_p1 = $signed(reg_774);

assign OP2_V_20_fu_1744_p1 = $signed(matrix_V_load_21_reg_2489);

assign OP2_V_21_fu_1776_p1 = $signed(reg_774);

assign OP2_V_22_fu_1814_p1 = $signed(matrix_V_load_23_reg_2534);

assign OP2_V_23_fu_1852_p1 = $signed(reg_828);

assign OP2_V_24_fu_1884_p1 = $signed(matrix_V_load_25_reg_2569);

assign OP2_V_2_fu_976_p1 = $signed(reg_765);

assign OP2_V_3_fu_1029_p1 = $signed(reg_784);

assign OP2_V_4_fu_1082_p1 = $signed(reg_774);

assign OP2_V_5_fu_1135_p1 = $signed(reg_794);

assign OP2_V_6_fu_1188_p1 = $signed(reg_765);

assign OP2_V_7_fu_1241_p1 = $signed(reg_808);

assign OP2_V_8_fu_1298_p1 = $signed(reg_784);

assign OP2_V_9_fu_1349_p1 = $signed(reg_818);

assign OP2_V_cast_fu_906_p1 = $signed(reg_765);

assign OP2_V_s_fu_1390_p1 = $signed(reg_774);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (ap_done_reg == 1'b1);
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_807 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign m_fu_1940_p2 = (m1_reg_660 + 4'd1);

assign next_mul_fu_1781_p2 = (phi_mul_reg_629 + 8'd26);

assign p_Val2_15_10_fu_1468_p2 = (reg_799 + tmp_41_10_fu_1461_p3);

assign p_Val2_15_11_fu_1499_p2 = (reg_799 + tmp_41_11_fu_1492_p3);

assign p_Val2_15_12_fu_1532_p2 = (reg_799 + tmp_41_12_fu_1525_p3);

assign p_Val2_15_13_fu_1563_p2 = (reg_799 + tmp_41_13_fu_1556_p3);

assign p_Val2_15_14_fu_1596_p2 = (reg_799 + tmp_41_14_fu_1589_p3);

assign p_Val2_15_15_fu_1627_p2 = (reg_799 + tmp_41_15_fu_1620_p3);

assign p_Val2_15_16_fu_1660_p2 = (reg_799 + tmp_41_16_fu_1653_p3);

assign p_Val2_15_17_fu_1691_p2 = (reg_799 + tmp_41_17_fu_1684_p3);

assign p_Val2_15_18_fu_1724_p2 = (reg_799 + tmp_41_18_fu_1717_p3);

assign p_Val2_15_19_fu_1755_p2 = (reg_799 + tmp_41_19_fu_1748_p3);

assign p_Val2_15_1_fu_1008_p2 = (reg_799 + tmp_41_1_fu_1001_p3);

assign p_Val2_15_20_fu_1794_p2 = (reg_799 + tmp_41_20_fu_1787_p3);

assign p_Val2_15_21_fu_1831_p2 = (reg_799 + tmp_41_21_fu_1824_p3);

assign p_Val2_15_22_fu_1864_p2 = (reg_799 + tmp_41_22_fu_1857_p3);

assign p_Val2_15_23_fu_1895_p2 = (reg_799 + tmp_41_23_fu_1888_p3);

assign p_Val2_15_24_fu_1923_p2 = (reg_799 + tmp_41_24_fu_1916_p3);

assign p_Val2_15_2_fu_1061_p2 = (reg_799 + tmp_41_2_fu_1054_p3);

assign p_Val2_15_3_fu_1114_p2 = (reg_799 + tmp_41_3_fu_1107_p3);

assign p_Val2_15_4_fu_1167_p2 = (reg_799 + tmp_41_4_fu_1160_p3);

assign p_Val2_15_5_fu_1220_p2 = (reg_799 + tmp_41_5_fu_1213_p3);

assign p_Val2_15_6_fu_1277_p2 = (reg_799 + tmp_41_6_fu_1270_p3);

assign p_Val2_15_7_fu_1328_p2 = (reg_799 + tmp_41_7_fu_1321_p3);

assign p_Val2_15_8_fu_1369_p2 = (reg_799 + tmp_41_8_fu_1362_p3);

assign p_Val2_15_9_fu_1402_p2 = (reg_799 + tmp_41_9_fu_1395_p3);

assign p_Val2_15_s_fu_1435_p2 = (reg_799 + tmp_41_s_fu_1428_p3);

assign phi_mul_cast2_fu_1246_p1 = phi_mul_reg_629;

assign phi_mul_cast_fu_833_p1 = ap_phi_mux_phi_mul_phi_fu_633_p6;

assign result_V_address0 = tmp_s_fu_1911_p1;

assign result_V_d0 = {{p_Val2_15_24_fu_1923_p2[34:17]}};

assign tmp_10_fu_889_p2 = (phi_mul_reg_629 + 8'd6);

assign tmp_11_fu_895_p2 = (phi_mul_reg_629 + 8'd7);

assign tmp_12_cast_fu_844_p1 = tmp_4_fu_838_p2;

assign tmp_12_fu_919_p2 = (phi_mul_reg_629 + 8'd8);

assign tmp_13_cast_fu_861_p1 = tmp_5_reg_1958;

assign tmp_13_fu_925_p2 = (phi_mul_reg_629 + 8'd9);

assign tmp_14_cast_fu_865_p1 = tmp_6_reg_1963;

assign tmp_14_fu_959_p2 = (phi_mul_reg_629 + 8'd10);

assign tmp_15_cast_fu_881_p1 = tmp_7_reg_1988;

assign tmp_15_fu_965_p2 = (phi_mul_reg_629 + 8'd11);

assign tmp_16_cast_fu_885_p1 = tmp_9_reg_1993;

assign tmp_16_fu_989_p2 = (phi_mul_reg_629 + 8'd12);

assign tmp_17_cast_fu_911_p1 = tmp_10_reg_2018;

assign tmp_17_fu_995_p2 = (phi_mul_reg_629 + 8'd13);

assign tmp_18_cast_fu_915_p1 = tmp_11_reg_2023;

assign tmp_18_fu_1042_p2 = (phi_mul_reg_629 + 8'd14);

assign tmp_19_cast_fu_951_p1 = tmp_12_reg_2058;

assign tmp_19_fu_1048_p2 = (phi_mul_reg_629 + 8'd15);

assign tmp_20_cast_fu_955_p1 = tmp_13_reg_2063;

assign tmp_20_fu_1095_p2 = (phi_mul_reg_629 + 8'd16);

assign tmp_21_cast_fu_981_p1 = tmp_14_reg_2103;

assign tmp_21_fu_1101_p2 = (phi_mul_reg_629 + 8'd17);

assign tmp_22_cast_fu_985_p1 = tmp_15_reg_2108;

assign tmp_22_fu_1148_p2 = (phi_mul_reg_629 + 8'd18);

assign tmp_23_cast_fu_1034_p1 = tmp_16_reg_2143;

assign tmp_23_fu_1154_p2 = (phi_mul_reg_629 + 8'd19);

assign tmp_24_cast_fu_1038_p1 = tmp_17_reg_2148;

assign tmp_24_fu_1201_p2 = (phi_mul_reg_629 + 8'd20);

assign tmp_25_cast_fu_1087_p1 = tmp_18_reg_2188;

assign tmp_25_fu_1207_p2 = (phi_mul_reg_629 + 8'd21);

assign tmp_26_cast_fu_1091_p1 = tmp_19_reg_2193;

assign tmp_26_fu_1258_p2 = (phi_mul_cast2_fu_1246_p1 + 9'd22);

assign tmp_27_cast_fu_1140_p1 = tmp_20_reg_2233;

assign tmp_27_fu_1264_p2 = (phi_mul_cast2_fu_1246_p1 + 9'd23);

assign tmp_28_cast_fu_1144_p1 = tmp_21_reg_2238;

assign tmp_28_fu_1311_p2 = (phi_mul_cast2_reg_2388 + 9'd24);

assign tmp_29_cast_fu_1193_p1 = tmp_22_reg_2288;

assign tmp_29_fu_1316_p2 = (phi_mul_cast2_reg_2388 + 9'd25);

assign tmp_30_cast_fu_1197_p1 = tmp_23_reg_2293;

assign tmp_31_cast_fu_1250_p1 = tmp_24_reg_2343;

assign tmp_32_cast_fu_1254_p1 = tmp_25_reg_2348;

assign tmp_33_cast_fu_1303_p1 = tmp_26_reg_2404;

assign tmp_34_cast_fu_1307_p1 = tmp_27_reg_2409;

assign tmp_35_cast_fu_1354_p1 = tmp_28_reg_2459;

assign tmp_36_cast_fu_1358_p1 = tmp_29_reg_2464;

assign tmp_41_10_fu_1461_p3 = {{tmp_40_reg_2574}, {17'd0}};

assign tmp_41_11_fu_1492_p3 = {{tmp_41_reg_2589}, {17'd0}};

assign tmp_41_12_fu_1525_p3 = {{tmp_42_reg_2604}, {17'd0}};

assign tmp_41_13_fu_1556_p3 = {{tmp_43_reg_2619}, {17'd0}};

assign tmp_41_14_fu_1589_p3 = {{tmp_44_reg_2634}, {17'd0}};

assign tmp_41_15_fu_1620_p3 = {{tmp_45_reg_2649}, {17'd0}};

assign tmp_41_16_fu_1653_p3 = {{tmp_46_reg_2664}, {17'd0}};

assign tmp_41_17_fu_1684_p3 = {{tmp_47_reg_2679}, {17'd0}};

assign tmp_41_18_fu_1717_p3 = {{tmp_48_reg_2694}, {17'd0}};

assign tmp_41_19_fu_1748_p3 = {{tmp_49_reg_2709}, {17'd0}};

assign tmp_41_1_fu_1001_p3 = {{tmp_30_reg_2078}, {17'd0}};

assign tmp_41_20_fu_1787_p3 = {{tmp_50_reg_2724}, {17'd0}};

assign tmp_41_21_fu_1824_p3 = {{tmp_51_reg_2744}, {17'd0}};

assign tmp_41_22_fu_1857_p3 = {{tmp_52_reg_2763}, {17'd0}};

assign tmp_41_23_fu_1888_p3 = {{tmp_53_reg_2778}, {17'd0}};

assign tmp_41_24_fu_1916_p3 = {{tmp_54_reg_2793}, {17'd0}};

assign tmp_41_2_fu_1054_p3 = {{tmp_31_reg_2153}, {17'd0}};

assign tmp_41_3_fu_1107_p3 = {{tmp_32_reg_2198}, {17'd0}};

assign tmp_41_4_fu_1160_p3 = {{tmp_33_reg_2243}, {17'd0}};

assign tmp_41_5_fu_1213_p3 = {{tmp_34_reg_2298}, {17'd0}};

assign tmp_41_6_fu_1270_p3 = {{tmp_35_reg_2353}, {17'd0}};

assign tmp_41_7_fu_1321_p3 = {{tmp_36_reg_2414}, {17'd0}};

assign tmp_41_8_fu_1362_p3 = {{tmp_37_reg_2469}, {17'd0}};

assign tmp_41_9_fu_1395_p3 = {{tmp_38_reg_2514}, {17'd0}};

assign tmp_41_s_fu_1428_p3 = {{tmp_39_reg_2549}, {17'd0}};

assign tmp_4_fu_838_p2 = (ap_phi_mux_phi_mul_phi_fu_633_p6 | 8'd1);

assign tmp_5_fu_849_p2 = (ap_phi_mux_phi_mul_phi_fu_633_p6 + 8'd2);

assign tmp_6_fu_855_p2 = (ap_phi_mux_phi_mul_phi_fu_633_p6 + 8'd3);

assign tmp_7_fu_869_p2 = (phi_mul_reg_629 + 8'd4);

assign tmp_9_fu_875_p2 = (phi_mul_reg_629 + 8'd5);

assign tmp_fu_1818_p2 = ((m1_reg_660 == 4'd9) ? 1'b1 : 1'b0);

assign tmp_s_fu_1911_p1 = m1_reg_660;

always @ (posedge ap_clk) begin
    phi_mul_cast2_reg_2388[8] <= 1'b0;
end

endmodule //mvprod_layer_2
