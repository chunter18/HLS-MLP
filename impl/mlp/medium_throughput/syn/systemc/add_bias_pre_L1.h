// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _add_bias_pre_L1_HH_
#define _add_bias_pre_L1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "mlp_mux_832_18_2_1.h"
#include "mlp_urem_9ns_7ns_bkb.h"
#include "mlp_mul_mul_9ns_1cud.h"

namespace ap_rtl {

struct add_bias_pre_L1 : public sc_module {
    // Port declarations 63
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > input_0_V_address0;
    sc_out< sc_logic > input_0_V_ce0;
    sc_in< sc_lv<18> > input_0_V_q0;
    sc_out< sc_lv<6> > input_1_V_address0;
    sc_out< sc_logic > input_1_V_ce0;
    sc_in< sc_lv<18> > input_1_V_q0;
    sc_out< sc_lv<6> > input_2_V_address0;
    sc_out< sc_logic > input_2_V_ce0;
    sc_in< sc_lv<18> > input_2_V_q0;
    sc_out< sc_lv<6> > input_3_V_address0;
    sc_out< sc_logic > input_3_V_ce0;
    sc_in< sc_lv<18> > input_3_V_q0;
    sc_out< sc_lv<6> > input_4_V_address0;
    sc_out< sc_logic > input_4_V_ce0;
    sc_in< sc_lv<18> > input_4_V_q0;
    sc_out< sc_lv<6> > input_5_V_address0;
    sc_out< sc_logic > input_5_V_ce0;
    sc_in< sc_lv<18> > input_5_V_q0;
    sc_out< sc_lv<6> > input_6_V_address0;
    sc_out< sc_logic > input_6_V_ce0;
    sc_in< sc_lv<18> > input_6_V_q0;
    sc_out< sc_lv<6> > input_7_V_address0;
    sc_out< sc_logic > input_7_V_ce0;
    sc_in< sc_lv<18> > input_7_V_q0;
    sc_out< sc_lv<6> > result_0_V_address0;
    sc_out< sc_logic > result_0_V_ce0;
    sc_out< sc_logic > result_0_V_we0;
    sc_out< sc_lv<18> > result_0_V_d0;
    sc_out< sc_lv<6> > result_1_V_address0;
    sc_out< sc_logic > result_1_V_ce0;
    sc_out< sc_logic > result_1_V_we0;
    sc_out< sc_lv<18> > result_1_V_d0;
    sc_out< sc_lv<6> > result_2_V_address0;
    sc_out< sc_logic > result_2_V_ce0;
    sc_out< sc_logic > result_2_V_we0;
    sc_out< sc_lv<18> > result_2_V_d0;
    sc_out< sc_lv<6> > result_3_V_address0;
    sc_out< sc_logic > result_3_V_ce0;
    sc_out< sc_logic > result_3_V_we0;
    sc_out< sc_lv<18> > result_3_V_d0;
    sc_out< sc_lv<6> > result_4_V_address0;
    sc_out< sc_logic > result_4_V_ce0;
    sc_out< sc_logic > result_4_V_we0;
    sc_out< sc_lv<18> > result_4_V_d0;
    sc_out< sc_lv<6> > result_5_V_address0;
    sc_out< sc_logic > result_5_V_ce0;
    sc_out< sc_logic > result_5_V_we0;
    sc_out< sc_lv<18> > result_5_V_d0;
    sc_out< sc_lv<6> > result_6_V_address0;
    sc_out< sc_logic > result_6_V_ce0;
    sc_out< sc_logic > result_6_V_we0;
    sc_out< sc_lv<18> > result_6_V_d0;
    sc_out< sc_lv<6> > result_7_V_address0;
    sc_out< sc_logic > result_7_V_ce0;
    sc_out< sc_logic > result_7_V_we0;
    sc_out< sc_lv<18> > result_7_V_d0;


    // Module declarations
    add_bias_pre_L1(sc_module_name name);
    SC_HAS_PROCESS(add_bias_pre_L1);

    ~add_bias_pre_L1();

    sc_trace_file* mVcdFile;

    mlp_mux_832_18_2_1<1,2,18,18,18,18,18,18,18,18,32,18>* mlp_mux_832_18_2_1_U1;
    mlp_urem_9ns_7ns_bkb<1,13,9,7,9>* mlp_urem_9ns_7ns_bkb_U2;
    mlp_mul_mul_9ns_1cud<1,3,9,11,20>* mlp_mul_mul_9ns_1cud_U3;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_reg_553;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state9_pp0_stage1_iter2;
    sc_signal< bool > ap_block_state11_pp0_stage1_iter3;
    sc_signal< bool > ap_block_state13_pp0_stage1_iter4;
    sc_signal< bool > ap_block_state15_pp0_stage1_iter5;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter6;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<9> > i4_reg_316;
    sc_signal< sc_lv<9> > phi_urem_reg_330;
    sc_signal< sc_lv<1> > do_init_reg_344;
    sc_signal< sc_lv<1> > do_init_reg_344_pp0_iter1_reg;
    sc_signal< sc_lv<1> > do_init_reg_344_pp0_iter2_reg;
    sc_signal< sc_lv<1> > do_init_reg_344_pp0_iter3_reg;
    sc_signal< sc_lv<1> > do_init_reg_344_pp0_iter4_reg;
    sc_signal< sc_lv<1> > do_init_reg_344_pp0_iter5_reg;
    sc_signal< sc_lv<18> > phi_mul_reg_361;
    sc_signal< sc_lv<9> > i_fu_375_p2;
    sc_signal< sc_lv<9> > i_reg_500;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter6;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<9> > next_urem_fu_393_p2;
    sc_signal< sc_lv<9> > next_urem_reg_547;
    sc_signal< sc_lv<1> > tmp_fu_399_p2;
    sc_signal< sc_lv<1> > tmp_reg_553_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_reg_553_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_reg_553_pp0_iter3_reg;
    sc_signal< sc_lv<1> > tmp_reg_553_pp0_iter4_reg;
    sc_signal< sc_lv<1> > tmp_reg_553_pp0_iter5_reg;
    sc_signal< sc_lv<1> > tmp_reg_553_pp0_iter6_reg;
    sc_signal< sc_lv<18> > next_mul_fu_405_p2;
    sc_signal< sc_lv<18> > next_mul_reg_557;
    sc_signal< sc_lv<9> > idx_urem_fu_457_p3;
    sc_signal< sc_lv<9> > idx_urem_reg_607;
    sc_signal< sc_lv<18> > grp_fu_425_p10;
    sc_signal< sc_lv<18> > tmp_4_reg_612;
    sc_signal< sc_lv<18> > tmp_4_reg_612_pp0_iter2_reg;
    sc_signal< sc_lv<18> > tmp_4_reg_612_pp0_iter3_reg;
    sc_signal< sc_lv<18> > tmp_4_reg_612_pp0_iter4_reg;
    sc_signal< sc_lv<18> > tmp_4_reg_612_pp0_iter5_reg;
    sc_signal< sc_lv<18> > tmp_4_reg_612_pp0_iter6_reg;
    sc_signal< sc_lv<20> > grp_fu_494_p2;
    sc_signal< sc_lv<20> > mul_reg_629;
    sc_signal< sc_lv<9> > arrayNo1_fu_490_p1;
    sc_signal< sc_lv<9> > arrayNo1_reg_634;
    sc_signal< sc_lv<9> > arrayNo1_reg_634_pp0_iter3_reg;
    sc_signal< sc_lv<9> > arrayNo1_reg_634_pp0_iter4_reg;
    sc_signal< sc_lv<9> > arrayNo1_reg_634_pp0_iter5_reg;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0_reg;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<9> > ap_phi_mux_i4_phi_fu_320_p6;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<9> > ap_phi_mux_phi_urem_phi_fu_334_p6;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<18> > ap_phi_mux_phi_mul_phi_fu_365_p6;
    sc_signal< sc_lv<64> > newIndex1_fu_381_p1;
    sc_signal< sc_lv<64> > newIndex3_fu_464_p1;
    sc_signal< sc_lv<3> > tmp_3_fu_411_p4;
    sc_signal< sc_lv<32> > grp_fu_425_p9;
    sc_signal< sc_lv<7> > grp_fu_447_p1;
    sc_signal< sc_lv<1> > tmp_6_fu_452_p2;
    sc_signal< sc_lv<9> > grp_fu_447_p2;
    sc_signal< sc_lv<5> > tmp_5_fu_481_p4;
    sc_signal< sc_lv<9> > grp_fu_494_p0;
    sc_signal< sc_lv<11> > grp_fu_494_p1;
    sc_signal< sc_logic > grp_fu_425_ce;
    sc_signal< sc_logic > grp_fu_447_ce;
    sc_signal< sc_logic > grp_fu_494_ce;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_idle_pp0_0to5;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<20> > grp_fu_494_p00;
    sc_signal< bool > ap_condition_279;
    sc_signal< bool > ap_condition_293;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_pp0_stage1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<18> ap_const_lv18_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<18> ap_const_lv18_10000;
    static const sc_lv<9> ap_const_lv9_6;
    static const sc_lv<9> ap_const_lv9_5;
    static const sc_lv<9> ap_const_lv9_4;
    static const sc_lv<9> ap_const_lv9_3;
    static const sc_lv<9> ap_const_lv9_2;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<9> ap_const_lv9_18F;
    static const sc_lv<18> ap_const_lv18_290;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<9> ap_const_lv9_33;
    static const sc_lv<9> ap_const_lv9_32;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<20> ap_const_lv20_283;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage0_iter3();
    void thread_ap_block_state11_pp0_stage1_iter3();
    void thread_ap_block_state12_pp0_stage0_iter4();
    void thread_ap_block_state13_pp0_stage1_iter4();
    void thread_ap_block_state14_pp0_stage0_iter5();
    void thread_ap_block_state15_pp0_stage1_iter5();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter6();
    void thread_ap_block_state5_pp0_stage1_iter6();
    void thread_ap_block_state6_pp0_stage0_iter1();
    void thread_ap_block_state7_pp0_stage1_iter1();
    void thread_ap_block_state8_pp0_stage0_iter2();
    void thread_ap_block_state9_pp0_stage1_iter2();
    void thread_ap_condition_279();
    void thread_ap_condition_293();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to5();
    void thread_ap_phi_mux_i4_phi_fu_320_p6();
    void thread_ap_phi_mux_phi_mul_phi_fu_365_p6();
    void thread_ap_phi_mux_phi_urem_phi_fu_334_p6();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_arrayNo1_fu_490_p1();
    void thread_grp_fu_425_ce();
    void thread_grp_fu_425_p9();
    void thread_grp_fu_447_ce();
    void thread_grp_fu_447_p1();
    void thread_grp_fu_494_ce();
    void thread_grp_fu_494_p0();
    void thread_grp_fu_494_p00();
    void thread_grp_fu_494_p1();
    void thread_i_fu_375_p2();
    void thread_idx_urem_fu_457_p3();
    void thread_input_0_V_address0();
    void thread_input_0_V_ce0();
    void thread_input_1_V_address0();
    void thread_input_1_V_ce0();
    void thread_input_2_V_address0();
    void thread_input_2_V_ce0();
    void thread_input_3_V_address0();
    void thread_input_3_V_ce0();
    void thread_input_4_V_address0();
    void thread_input_4_V_ce0();
    void thread_input_5_V_address0();
    void thread_input_5_V_ce0();
    void thread_input_6_V_address0();
    void thread_input_6_V_ce0();
    void thread_input_7_V_address0();
    void thread_input_7_V_ce0();
    void thread_newIndex1_fu_381_p1();
    void thread_newIndex3_fu_464_p1();
    void thread_next_mul_fu_405_p2();
    void thread_next_urem_fu_393_p2();
    void thread_result_0_V_address0();
    void thread_result_0_V_ce0();
    void thread_result_0_V_d0();
    void thread_result_0_V_we0();
    void thread_result_1_V_address0();
    void thread_result_1_V_ce0();
    void thread_result_1_V_d0();
    void thread_result_1_V_we0();
    void thread_result_2_V_address0();
    void thread_result_2_V_ce0();
    void thread_result_2_V_d0();
    void thread_result_2_V_we0();
    void thread_result_3_V_address0();
    void thread_result_3_V_ce0();
    void thread_result_3_V_d0();
    void thread_result_3_V_we0();
    void thread_result_4_V_address0();
    void thread_result_4_V_ce0();
    void thread_result_4_V_d0();
    void thread_result_4_V_we0();
    void thread_result_5_V_address0();
    void thread_result_5_V_ce0();
    void thread_result_5_V_d0();
    void thread_result_5_V_we0();
    void thread_result_6_V_address0();
    void thread_result_6_V_ce0();
    void thread_result_6_V_d0();
    void thread_result_6_V_we0();
    void thread_result_7_V_address0();
    void thread_result_7_V_ce0();
    void thread_result_7_V_d0();
    void thread_result_7_V_we0();
    void thread_tmp_3_fu_411_p4();
    void thread_tmp_5_fu_481_p4();
    void thread_tmp_6_fu_452_p2();
    void thread_tmp_fu_399_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
