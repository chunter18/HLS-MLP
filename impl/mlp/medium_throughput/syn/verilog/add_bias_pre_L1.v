// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module add_bias_pre_L1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input_0_V_address0,
        input_0_V_ce0,
        input_0_V_q0,
        input_1_V_address0,
        input_1_V_ce0,
        input_1_V_q0,
        input_2_V_address0,
        input_2_V_ce0,
        input_2_V_q0,
        input_3_V_address0,
        input_3_V_ce0,
        input_3_V_q0,
        input_4_V_address0,
        input_4_V_ce0,
        input_4_V_q0,
        input_5_V_address0,
        input_5_V_ce0,
        input_5_V_q0,
        input_6_V_address0,
        input_6_V_ce0,
        input_6_V_q0,
        input_7_V_address0,
        input_7_V_ce0,
        input_7_V_q0,
        result_0_V_address0,
        result_0_V_ce0,
        result_0_V_we0,
        result_0_V_d0,
        result_1_V_address0,
        result_1_V_ce0,
        result_1_V_we0,
        result_1_V_d0,
        result_2_V_address0,
        result_2_V_ce0,
        result_2_V_we0,
        result_2_V_d0,
        result_3_V_address0,
        result_3_V_ce0,
        result_3_V_we0,
        result_3_V_d0,
        result_4_V_address0,
        result_4_V_ce0,
        result_4_V_we0,
        result_4_V_d0,
        result_5_V_address0,
        result_5_V_ce0,
        result_5_V_we0,
        result_5_V_d0,
        result_6_V_address0,
        result_6_V_ce0,
        result_6_V_we0,
        result_6_V_d0,
        result_7_V_address0,
        result_7_V_ce0,
        result_7_V_we0,
        result_7_V_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_pp0_stage1 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [5:0] input_0_V_address0;
output   input_0_V_ce0;
input  [17:0] input_0_V_q0;
output  [5:0] input_1_V_address0;
output   input_1_V_ce0;
input  [17:0] input_1_V_q0;
output  [5:0] input_2_V_address0;
output   input_2_V_ce0;
input  [17:0] input_2_V_q0;
output  [5:0] input_3_V_address0;
output   input_3_V_ce0;
input  [17:0] input_3_V_q0;
output  [5:0] input_4_V_address0;
output   input_4_V_ce0;
input  [17:0] input_4_V_q0;
output  [5:0] input_5_V_address0;
output   input_5_V_ce0;
input  [17:0] input_5_V_q0;
output  [5:0] input_6_V_address0;
output   input_6_V_ce0;
input  [17:0] input_6_V_q0;
output  [5:0] input_7_V_address0;
output   input_7_V_ce0;
input  [17:0] input_7_V_q0;
output  [5:0] result_0_V_address0;
output   result_0_V_ce0;
output   result_0_V_we0;
output  [17:0] result_0_V_d0;
output  [5:0] result_1_V_address0;
output   result_1_V_ce0;
output   result_1_V_we0;
output  [17:0] result_1_V_d0;
output  [5:0] result_2_V_address0;
output   result_2_V_ce0;
output   result_2_V_we0;
output  [17:0] result_2_V_d0;
output  [5:0] result_3_V_address0;
output   result_3_V_ce0;
output   result_3_V_we0;
output  [17:0] result_3_V_d0;
output  [5:0] result_4_V_address0;
output   result_4_V_ce0;
output   result_4_V_we0;
output  [17:0] result_4_V_d0;
output  [5:0] result_5_V_address0;
output   result_5_V_ce0;
output   result_5_V_we0;
output  [17:0] result_5_V_d0;
output  [5:0] result_6_V_address0;
output   result_6_V_ce0;
output   result_6_V_we0;
output  [17:0] result_6_V_d0;
output  [5:0] result_7_V_address0;
output   result_7_V_ce0;
output   result_7_V_we0;
output  [17:0] result_7_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_0_V_ce0;
reg input_1_V_ce0;
reg input_2_V_ce0;
reg input_3_V_ce0;
reg input_4_V_ce0;
reg input_5_V_ce0;
reg input_6_V_ce0;
reg input_7_V_ce0;
reg[5:0] result_0_V_address0;
reg result_0_V_ce0;
reg result_0_V_we0;
reg[17:0] result_0_V_d0;
reg result_1_V_ce0;
reg result_1_V_we0;
reg result_2_V_ce0;
reg result_2_V_we0;
reg result_3_V_ce0;
reg result_3_V_we0;
reg result_4_V_ce0;
reg result_4_V_we0;
reg result_5_V_ce0;
reg result_5_V_we0;
reg result_6_V_ce0;
reg result_6_V_we0;
reg result_7_V_ce0;
reg result_7_V_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] tmp_reg_553;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state9_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_state13_pp0_stage1_iter4;
wire    ap_block_state15_pp0_stage1_iter5;
wire    ap_block_state5_pp0_stage1_iter6;
wire    ap_block_pp0_stage1_11001;
reg   [8:0] i4_reg_316;
reg   [8:0] phi_urem_reg_330;
reg   [0:0] do_init_reg_344;
reg   [0:0] do_init_reg_344_pp0_iter1_reg;
reg   [0:0] do_init_reg_344_pp0_iter2_reg;
reg   [0:0] do_init_reg_344_pp0_iter3_reg;
reg   [0:0] do_init_reg_344_pp0_iter4_reg;
reg   [0:0] do_init_reg_344_pp0_iter5_reg;
reg   [17:0] phi_mul_reg_361;
wire   [8:0] i_fu_375_p2;
reg   [8:0] i_reg_500;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state8_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state12_pp0_stage0_iter4;
wire    ap_block_state14_pp0_stage0_iter5;
wire    ap_block_state4_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
wire   [8:0] next_urem_fu_393_p2;
reg   [8:0] next_urem_reg_547;
wire   [0:0] tmp_fu_399_p2;
reg   [0:0] tmp_reg_553_pp0_iter1_reg;
reg   [0:0] tmp_reg_553_pp0_iter2_reg;
reg   [0:0] tmp_reg_553_pp0_iter3_reg;
reg   [0:0] tmp_reg_553_pp0_iter4_reg;
reg   [0:0] tmp_reg_553_pp0_iter5_reg;
reg   [0:0] tmp_reg_553_pp0_iter6_reg;
wire   [17:0] next_mul_fu_405_p2;
reg   [17:0] next_mul_reg_557;
wire   [8:0] idx_urem_fu_457_p3;
reg   [8:0] idx_urem_reg_607;
wire   [17:0] grp_fu_425_p10;
reg   [17:0] tmp_4_reg_612;
reg   [17:0] tmp_4_reg_612_pp0_iter2_reg;
reg   [17:0] tmp_4_reg_612_pp0_iter3_reg;
reg   [17:0] tmp_4_reg_612_pp0_iter4_reg;
reg   [17:0] tmp_4_reg_612_pp0_iter5_reg;
reg   [17:0] tmp_4_reg_612_pp0_iter6_reg;
wire   [19:0] grp_fu_494_p2;
reg   [19:0] mul_reg_629;
wire  signed [8:0] arrayNo1_fu_490_p1;
reg  signed [8:0] arrayNo1_reg_634;
reg  signed [8:0] arrayNo1_reg_634_pp0_iter3_reg;
reg  signed [8:0] arrayNo1_reg_634_pp0_iter4_reg;
reg  signed [8:0] arrayNo1_reg_634_pp0_iter5_reg;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_block_state1;
reg   [8:0] ap_phi_mux_i4_phi_fu_320_p6;
wire    ap_block_pp0_stage0;
reg   [8:0] ap_phi_mux_phi_urem_phi_fu_334_p6;
wire    ap_block_pp0_stage1;
reg   [17:0] ap_phi_mux_phi_mul_phi_fu_365_p6;
wire   [63:0] newIndex1_fu_381_p1;
wire   [63:0] newIndex3_fu_464_p1;
wire   [2:0] tmp_3_fu_411_p4;
wire   [31:0] grp_fu_425_p9;
wire   [6:0] grp_fu_447_p1;
wire   [0:0] tmp_6_fu_452_p2;
wire   [8:0] grp_fu_447_p2;
wire   [4:0] tmp_5_fu_481_p4;
wire   [8:0] grp_fu_494_p0;
wire   [10:0] grp_fu_494_p1;
reg    grp_fu_425_ce;
reg    grp_fu_447_ce;
reg    grp_fu_494_ce;
reg   [2:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_0to5;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [19:0] grp_fu_494_p00;
reg    ap_condition_279;
reg    ap_condition_293;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

mlp_mux_832_18_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 18 ),
    .din4_WIDTH( 18 ),
    .din5_WIDTH( 18 ),
    .din6_WIDTH( 18 ),
    .din7_WIDTH( 18 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 18 ))
mlp_mux_832_18_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(input_0_V_q0),
    .din1(input_1_V_q0),
    .din2(input_2_V_q0),
    .din3(input_3_V_q0),
    .din4(input_4_V_q0),
    .din5(input_5_V_q0),
    .din6(input_6_V_q0),
    .din7(input_7_V_q0),
    .din8(grp_fu_425_p9),
    .ce(grp_fu_425_ce),
    .dout(grp_fu_425_p10)
);

mlp_urem_9ns_7ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 9 ))
mlp_urem_9ns_7ns_bkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(i_reg_500),
    .din1(grp_fu_447_p1),
    .ce(grp_fu_447_ce),
    .dout(grp_fu_447_p2)
);

mlp_mul_mul_9ns_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
mlp_mul_mul_9ns_1cud_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_494_p0),
    .din1(grp_fu_494_p1),
    .ce(grp_fu_494_ce),
    .dout(grp_fu_494_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_553_pp0_iter6_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_553_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        do_init_reg_344 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_553_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        do_init_reg_344 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_553 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i4_reg_316 <= i_reg_500;
    end else if ((((tmp_reg_553 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        i4_reg_316 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_553_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        phi_mul_reg_361 <= next_mul_reg_557;
    end else if ((((1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_553_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        phi_mul_reg_361 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_553 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        phi_urem_reg_330 <= idx_urem_reg_607;
    end else if ((((tmp_reg_553 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        phi_urem_reg_330 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        arrayNo1_reg_634 <= arrayNo1_fu_490_p1;
        arrayNo1_reg_634_pp0_iter3_reg <= arrayNo1_reg_634;
        arrayNo1_reg_634_pp0_iter4_reg <= arrayNo1_reg_634_pp0_iter3_reg;
        arrayNo1_reg_634_pp0_iter5_reg <= arrayNo1_reg_634_pp0_iter4_reg;
        do_init_reg_344_pp0_iter1_reg <= do_init_reg_344;
        do_init_reg_344_pp0_iter2_reg <= do_init_reg_344_pp0_iter1_reg;
        do_init_reg_344_pp0_iter3_reg <= do_init_reg_344_pp0_iter2_reg;
        do_init_reg_344_pp0_iter4_reg <= do_init_reg_344_pp0_iter3_reg;
        do_init_reg_344_pp0_iter5_reg <= do_init_reg_344_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_500 <= i_fu_375_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        idx_urem_reg_607 <= idx_urem_fu_457_p3;
        next_mul_reg_557 <= next_mul_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_reg_629 <= grp_fu_494_p2;
        next_urem_reg_547 <= next_urem_fu_393_p2;
        tmp_4_reg_612 <= grp_fu_425_p10;
        tmp_4_reg_612_pp0_iter2_reg <= tmp_4_reg_612;
        tmp_4_reg_612_pp0_iter3_reg <= tmp_4_reg_612_pp0_iter2_reg;
        tmp_4_reg_612_pp0_iter4_reg <= tmp_4_reg_612_pp0_iter3_reg;
        tmp_4_reg_612_pp0_iter5_reg <= tmp_4_reg_612_pp0_iter4_reg;
        tmp_4_reg_612_pp0_iter6_reg <= tmp_4_reg_612_pp0_iter5_reg;
        tmp_reg_553 <= tmp_fu_399_p2;
        tmp_reg_553_pp0_iter1_reg <= tmp_reg_553;
        tmp_reg_553_pp0_iter2_reg <= tmp_reg_553_pp0_iter1_reg;
        tmp_reg_553_pp0_iter3_reg <= tmp_reg_553_pp0_iter2_reg;
        tmp_reg_553_pp0_iter4_reg <= tmp_reg_553_pp0_iter3_reg;
        tmp_reg_553_pp0_iter5_reg <= tmp_reg_553_pp0_iter4_reg;
        tmp_reg_553_pp0_iter6_reg <= tmp_reg_553_pp0_iter5_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_553_pp0_iter6_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_0to5 = 1'b1;
    end else begin
        ap_idle_pp0_0to5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_279)) begin
        if ((tmp_reg_553 == 1'd1)) begin
            ap_phi_mux_i4_phi_fu_320_p6 = 9'd0;
        end else if ((tmp_reg_553 == 1'd0)) begin
            ap_phi_mux_i4_phi_fu_320_p6 = i_reg_500;
        end else begin
            ap_phi_mux_i4_phi_fu_320_p6 = i4_reg_316;
        end
    end else begin
        ap_phi_mux_i4_phi_fu_320_p6 = i4_reg_316;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_293)) begin
        if ((tmp_reg_553_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_phi_mul_phi_fu_365_p6 = 18'd0;
        end else if ((tmp_reg_553_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_phi_mul_phi_fu_365_p6 = next_mul_reg_557;
        end else begin
            ap_phi_mux_phi_mul_phi_fu_365_p6 = phi_mul_reg_361;
        end
    end else begin
        ap_phi_mux_phi_mul_phi_fu_365_p6 = phi_mul_reg_361;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_279)) begin
        if ((tmp_reg_553 == 1'd1)) begin
            ap_phi_mux_phi_urem_phi_fu_334_p6 = 9'd0;
        end else if ((tmp_reg_553 == 1'd0)) begin
            ap_phi_mux_phi_urem_phi_fu_334_p6 = idx_urem_reg_607;
        end else begin
            ap_phi_mux_phi_urem_phi_fu_334_p6 = phi_urem_reg_330;
        end
    end else begin
        ap_phi_mux_phi_urem_phi_fu_334_p6 = phi_urem_reg_330;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_553 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_425_ce = 1'b1;
    end else begin
        grp_fu_425_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_447_ce = 1'b1;
    end else begin
        grp_fu_447_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_494_ce = 1'b1;
    end else begin
        grp_fu_494_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_0_V_ce0 = 1'b1;
    end else begin
        input_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_1_V_ce0 = 1'b1;
    end else begin
        input_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_2_V_ce0 = 1'b1;
    end else begin
        input_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_3_V_ce0 = 1'b1;
    end else begin
        input_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_4_V_ce0 = 1'b1;
    end else begin
        input_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_5_V_ce0 = 1'b1;
    end else begin
        input_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_6_V_ce0 = 1'b1;
    end else begin
        input_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_7_V_ce0 = 1'b1;
    end else begin
        input_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            result_0_V_address0 = newIndex3_fu_464_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            result_0_V_address0 = 64'd0;
        end else begin
            result_0_V_address0 = 'bx;
        end
    end else begin
        result_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        result_0_V_ce0 = 1'b1;
    end else begin
        result_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            result_0_V_d0 = tmp_4_reg_612_pp0_iter6_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            result_0_V_d0 = 18'd65536;
        end else begin
            result_0_V_d0 = 'bx;
        end
    end else begin
        result_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (arrayNo1_reg_634_pp0_iter5_reg == 9'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((do_init_reg_344_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        result_0_V_we0 = 1'b1;
    end else begin
        result_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        result_1_V_ce0 = 1'b1;
    end else begin
        result_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (arrayNo1_reg_634_pp0_iter5_reg == 9'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        result_1_V_we0 = 1'b1;
    end else begin
        result_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        result_2_V_ce0 = 1'b1;
    end else begin
        result_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (arrayNo1_reg_634_pp0_iter5_reg == 9'd2) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        result_2_V_we0 = 1'b1;
    end else begin
        result_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        result_3_V_ce0 = 1'b1;
    end else begin
        result_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (arrayNo1_reg_634_pp0_iter5_reg == 9'd3) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        result_3_V_we0 = 1'b1;
    end else begin
        result_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        result_4_V_ce0 = 1'b1;
    end else begin
        result_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (arrayNo1_reg_634_pp0_iter5_reg == 9'd4) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        result_4_V_we0 = 1'b1;
    end else begin
        result_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        result_5_V_ce0 = 1'b1;
    end else begin
        result_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (arrayNo1_reg_634_pp0_iter5_reg == 9'd5) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        result_5_V_we0 = 1'b1;
    end else begin
        result_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        result_6_V_ce0 = 1'b1;
    end else begin
        result_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (arrayNo1_reg_634_pp0_iter5_reg == 9'd6) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        result_6_V_we0 = 1'b1;
    end else begin
        result_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        result_7_V_ce0 = 1'b1;
    end else begin
        result_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(arrayNo1_reg_634_pp0_iter5_reg == 9'd1) & ~(arrayNo1_reg_634_pp0_iter5_reg == 9'd2) & ~(arrayNo1_reg_634_pp0_iter5_reg == 9'd3) & ~(arrayNo1_reg_634_pp0_iter5_reg == 9'd4) & ~(arrayNo1_reg_634_pp0_iter5_reg == 9'd5) & ~(arrayNo1_reg_634_pp0_iter5_reg == 9'd6) & ~(arrayNo1_reg_634_pp0_iter5_reg == 9'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        result_7_V_we0 = 1'b1;
    end else begin
        result_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (ap_done_reg == 1'b1);
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_279 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_293 = ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign arrayNo1_fu_490_p1 = $signed(tmp_5_fu_481_p4);

assign grp_fu_425_p9 = tmp_3_fu_411_p4;

assign grp_fu_447_p1 = 9'd51;

assign grp_fu_494_p0 = grp_fu_494_p00;

assign grp_fu_494_p00 = i_reg_500;

assign grp_fu_494_p1 = 20'd643;

assign i_fu_375_p2 = (ap_phi_mux_i4_phi_fu_320_p6 + 9'd1);

assign idx_urem_fu_457_p3 = ((tmp_6_fu_452_p2[0:0] === 1'b1) ? next_urem_reg_547 : 9'd0);

assign input_0_V_address0 = newIndex1_fu_381_p1;

assign input_1_V_address0 = newIndex1_fu_381_p1;

assign input_2_V_address0 = newIndex1_fu_381_p1;

assign input_3_V_address0 = newIndex1_fu_381_p1;

assign input_4_V_address0 = newIndex1_fu_381_p1;

assign input_5_V_address0 = newIndex1_fu_381_p1;

assign input_6_V_address0 = newIndex1_fu_381_p1;

assign input_7_V_address0 = newIndex1_fu_381_p1;

assign newIndex1_fu_381_p1 = ap_phi_mux_phi_urem_phi_fu_334_p6;

assign newIndex3_fu_464_p1 = grp_fu_447_p2;

assign next_mul_fu_405_p2 = (ap_phi_mux_phi_mul_phi_fu_365_p6 + 18'd656);

assign next_urem_fu_393_p2 = (ap_phi_mux_phi_urem_phi_fu_334_p6 + 9'd1);

assign result_1_V_address0 = newIndex3_fu_464_p1;

assign result_1_V_d0 = tmp_4_reg_612_pp0_iter6_reg;

assign result_2_V_address0 = newIndex3_fu_464_p1;

assign result_2_V_d0 = tmp_4_reg_612_pp0_iter6_reg;

assign result_3_V_address0 = newIndex3_fu_464_p1;

assign result_3_V_d0 = tmp_4_reg_612_pp0_iter6_reg;

assign result_4_V_address0 = newIndex3_fu_464_p1;

assign result_4_V_d0 = tmp_4_reg_612_pp0_iter6_reg;

assign result_5_V_address0 = newIndex3_fu_464_p1;

assign result_5_V_d0 = tmp_4_reg_612_pp0_iter6_reg;

assign result_6_V_address0 = newIndex3_fu_464_p1;

assign result_6_V_d0 = tmp_4_reg_612_pp0_iter6_reg;

assign result_7_V_address0 = newIndex3_fu_464_p1;

assign result_7_V_d0 = tmp_4_reg_612_pp0_iter6_reg;

assign tmp_3_fu_411_p4 = {{ap_phi_mux_phi_mul_phi_fu_365_p6[17:15]}};

assign tmp_5_fu_481_p4 = {{mul_reg_629[19:15]}};

assign tmp_6_fu_452_p2 = ((next_urem_reg_547 < 9'd50) ? 1'b1 : 1'b0);

assign tmp_fu_399_p2 = ((ap_phi_mux_i4_phi_fu_320_p6 == 9'd399) ? 1'b1 : 1'b0);

endmodule //add_bias_pre_L1
