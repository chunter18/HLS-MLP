// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sigmoid_activation_L.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sigmoid_activation_L::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sigmoid_activation_L::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> sigmoid_activation_L::ap_ST_fsm_state1 = "1";
const sc_lv<9> sigmoid_activation_L::ap_ST_fsm_state2 = "10";
const sc_lv<9> sigmoid_activation_L::ap_ST_fsm_state3 = "100";
const sc_lv<9> sigmoid_activation_L::ap_ST_fsm_state4 = "1000";
const sc_lv<9> sigmoid_activation_L::ap_ST_fsm_state5 = "10000";
const sc_lv<9> sigmoid_activation_L::ap_ST_fsm_state6 = "100000";
const sc_lv<9> sigmoid_activation_L::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> sigmoid_activation_L::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> sigmoid_activation_L::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> sigmoid_activation_L::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sigmoid_activation_L::ap_const_lv32_1 = "1";
const sc_lv<1> sigmoid_activation_L::ap_const_lv1_0 = "0";
const sc_lv<32> sigmoid_activation_L::ap_const_lv32_2 = "10";
const sc_lv<32> sigmoid_activation_L::ap_const_lv32_3 = "11";
const sc_lv<32> sigmoid_activation_L::ap_const_lv32_4 = "100";
const sc_lv<32> sigmoid_activation_L::ap_const_lv32_6 = "110";
const sc_lv<32> sigmoid_activation_L::ap_const_lv32_7 = "111";
const sc_lv<4> sigmoid_activation_L::ap_const_lv4_0 = "0000";
const sc_lv<32> sigmoid_activation_L::ap_const_lv32_8 = "1000";
const sc_lv<1> sigmoid_activation_L::ap_const_lv1_1 = "1";
const sc_lv<4> sigmoid_activation_L::ap_const_lv4_A = "1010";
const sc_lv<4> sigmoid_activation_L::ap_const_lv4_1 = "1";
const sc_lv<32> sigmoid_activation_L::ap_const_lv32_11 = "10001";
const sc_lv<18> sigmoid_activation_L::ap_const_lv18_0 = "000000000000000000";
const sc_lv<18> sigmoid_activation_L::ap_const_lv18_8000 = "1000000000000000";
const sc_lv<32> sigmoid_activation_L::ap_const_lv32_10 = "10000";
const sc_lv<3> sigmoid_activation_L::ap_const_lv3_0 = "000";
const sc_lv<10> sigmoid_activation_L::ap_const_lv10_0 = "0000000000";
const sc_lv<32> sigmoid_activation_L::ap_const_lv32_5 = "101";
const sc_lv<32> sigmoid_activation_L::ap_const_lv32_20 = "100000";
const sc_lv<32> sigmoid_activation_L::ap_const_lv32_A = "1010";
const sc_lv<32> sigmoid_activation_L::ap_const_lv32_1B = "11011";
const sc_lv<18> sigmoid_activation_L::ap_const_lv18_10000 = "10000000000000000";
const bool sigmoid_activation_L::ap_const_boolean_1 = true;

sigmoid_activation_L::sigmoid_activation_L(sc_module_name name) : sc_module(name), mVcdFile(0) {
    mlp_mul_mul_18s_1eOg_U478 = new mlp_mul_mul_18s_1eOg<1,3,18,18,33>("mlp_mul_mul_18s_1eOg_U478");
    mlp_mul_mul_18s_1eOg_U478->clk(ap_clk);
    mlp_mul_mul_18s_1eOg_U478->reset(ap_rst);
    mlp_mul_mul_18s_1eOg_U478->din0(grp_fu_215_p0);
    mlp_mul_mul_18s_1eOg_U478->din1(grp_fu_215_p1);
    mlp_mul_mul_18s_1eOg_U478->ce(ap_var_for_const0);
    mlp_mul_mul_18s_1eOg_U478->dout(grp_fu_215_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_OP1_V_cast_fu_153_p1);
    sensitive << ( p_Val2_2_reg_251 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_101_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_101_p2 );

    SC_METHOD(thread_grp_fu_215_p0);
    sensitive << ( OP1_V_cast_fu_153_p1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_215_p1);
    sensitive << ( OP1_V_cast_fu_153_p1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_i_1_fu_107_p2);
    sensitive << ( i_reg_90 );

    SC_METHOD(thread_input_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_113_p1 );

    SC_METHOD(thread_input_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_p_Val2_1_fu_126_p2);
    sensitive << ( p_Val2_s_reg_240 );

    SC_METHOD(thread_p_Val2_2_fu_131_p3);
    sensitive << ( p_Val2_s_reg_240 );
    sensitive << ( tmp_2_reg_246 );
    sensitive << ( p_Val2_1_fu_126_p2 );

    SC_METHOD(thread_p_Val2_3_fu_185_p2);
    sensitive << ( tmp_4_fu_169_p3 );
    sensitive << ( tmp_11_cast_fu_176_p4 );

    SC_METHOD(thread_p_Val2_4_fu_201_p3);
    sensitive << ( tmp_7_reg_256 );
    sensitive << ( tmp_9_fu_191_p4 );

    SC_METHOD(thread_p_Val2_5_fu_163_p2);
    sensitive << ( tmp_s_fu_156_p3 );

    SC_METHOD(thread_p_Val2_7_fu_209_p2);
    sensitive << ( p_Val2_4_reg_282 );

    SC_METHOD(thread_result_V_addr_gep_fu_82_p3);
    sensitive << ( tmp_1_reg_229 );
    sensitive << ( tmp_2_reg_246 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_result_V_address0);
    sensitive << ( tmp_1_reg_229 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( result_V_addr_gep_fu_82_p3 );

    SC_METHOD(thread_result_V_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_result_V_d0);
    sensitive << ( p_Val2_4_fu_201_p3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( p_Val2_7_fu_209_p2 );

    SC_METHOD(thread_result_V_we0);
    sensitive << ( tmp_2_reg_246 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_tmp_11_cast_fu_176_p4);
    sensitive << ( tmp_8_reg_272 );

    SC_METHOD(thread_tmp_1_fu_113_p1);
    sensitive << ( i_reg_90 );

    SC_METHOD(thread_tmp_4_fu_169_p3);
    sensitive << ( p_Val2_5_reg_277 );

    SC_METHOD(thread_tmp_7_fu_137_p2);
    sensitive << ( p_Val2_2_fu_131_p3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_9_fu_191_p4);
    sensitive << ( p_Val2_3_fu_185_p2 );

    SC_METHOD(thread_tmp_fu_101_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_90 );

    SC_METHOD(thread_tmp_s_fu_156_p3);
    sensitive << ( tmp_3_reg_261 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_101_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sigmoid_activation_L_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_V_address0, "(port)input_V_address0");
    sc_trace(mVcdFile, input_V_ce0, "(port)input_V_ce0");
    sc_trace(mVcdFile, input_V_q0, "(port)input_V_q0");
    sc_trace(mVcdFile, result_V_address0, "(port)result_V_address0");
    sc_trace(mVcdFile, result_V_ce0, "(port)result_V_ce0");
    sc_trace(mVcdFile, result_V_we0, "(port)result_V_we0");
    sc_trace(mVcdFile, result_V_d0, "(port)result_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_1_fu_107_p2, "i_1_fu_107_p2");
    sc_trace(mVcdFile, i_1_reg_224, "i_1_reg_224");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_1_fu_113_p1, "tmp_1_fu_113_p1");
    sc_trace(mVcdFile, tmp_1_reg_229, "tmp_1_reg_229");
    sc_trace(mVcdFile, tmp_fu_101_p2, "tmp_fu_101_p2");
    sc_trace(mVcdFile, p_Val2_s_reg_240, "p_Val2_s_reg_240");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_2_reg_246, "tmp_2_reg_246");
    sc_trace(mVcdFile, p_Val2_2_fu_131_p3, "p_Val2_2_fu_131_p3");
    sc_trace(mVcdFile, p_Val2_2_reg_251, "p_Val2_2_reg_251");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_7_fu_137_p2, "tmp_7_fu_137_p2");
    sc_trace(mVcdFile, tmp_7_reg_256, "tmp_7_reg_256");
    sc_trace(mVcdFile, tmp_3_reg_261, "tmp_3_reg_261");
    sc_trace(mVcdFile, OP1_V_cast_fu_153_p1, "OP1_V_cast_fu_153_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_215_p2, "grp_fu_215_p2");
    sc_trace(mVcdFile, tmp_8_reg_272, "tmp_8_reg_272");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, p_Val2_5_fu_163_p2, "p_Val2_5_fu_163_p2");
    sc_trace(mVcdFile, p_Val2_5_reg_277, "p_Val2_5_reg_277");
    sc_trace(mVcdFile, p_Val2_4_fu_201_p3, "p_Val2_4_fu_201_p3");
    sc_trace(mVcdFile, p_Val2_4_reg_282, "p_Val2_4_reg_282");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_reg_90, "i_reg_90");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, result_V_addr_gep_fu_82_p3, "result_V_addr_gep_fu_82_p3");
    sc_trace(mVcdFile, p_Val2_7_fu_209_p2, "p_Val2_7_fu_209_p2");
    sc_trace(mVcdFile, p_Val2_1_fu_126_p2, "p_Val2_1_fu_126_p2");
    sc_trace(mVcdFile, tmp_s_fu_156_p3, "tmp_s_fu_156_p3");
    sc_trace(mVcdFile, tmp_4_fu_169_p3, "tmp_4_fu_169_p3");
    sc_trace(mVcdFile, tmp_11_cast_fu_176_p4, "tmp_11_cast_fu_176_p4");
    sc_trace(mVcdFile, p_Val2_3_fu_185_p2, "p_Val2_3_fu_185_p2");
    sc_trace(mVcdFile, tmp_9_fu_191_p4, "tmp_9_fu_191_p4");
    sc_trace(mVcdFile, grp_fu_215_p0, "grp_fu_215_p0");
    sc_trace(mVcdFile, grp_fu_215_p1, "grp_fu_215_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

sigmoid_activation_L::~sigmoid_activation_L() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete mlp_mul_mul_18s_1eOg_U478;
}

void sigmoid_activation_L::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void sigmoid_activation_L::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(tmp_fu_101_p2.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_reg_90 = i_1_reg_224.read();
    } else if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_90 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_224 = i_1_fu_107_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_Val2_2_reg_251 = p_Val2_2_fu_131_p3.read();
        tmp_3_reg_261 = p_Val2_2_fu_131_p3.read().range(16, 2);
        tmp_7_reg_256 = tmp_7_fu_137_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        p_Val2_4_reg_282 = p_Val2_4_fu_201_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_256.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        p_Val2_5_reg_277 = p_Val2_5_fu_163_p2.read();
        tmp_8_reg_272 = grp_fu_215_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_Val2_s_reg_240 = input_V_q0.read();
        tmp_2_reg_246 = input_V_q0.read().range(17, 17);
    }
    if ((esl_seteq<1,1,1>(tmp_fu_101_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_1_reg_229 = tmp_1_fu_113_p1.read();
    }
}

void sigmoid_activation_L::thread_OP1_V_cast_fu_153_p1() {
    OP1_V_cast_fu_153_p1 = esl_sext<33,18>(p_Val2_2_reg_251.read());
}

void sigmoid_activation_L::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sigmoid_activation_L::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sigmoid_activation_L::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sigmoid_activation_L::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sigmoid_activation_L::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void sigmoid_activation_L::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void sigmoid_activation_L::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void sigmoid_activation_L::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void sigmoid_activation_L::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void sigmoid_activation_L::thread_ap_done() {
    if ((esl_seteq<1,1,1>(tmp_fu_101_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void sigmoid_activation_L::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sigmoid_activation_L::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(tmp_fu_101_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sigmoid_activation_L::thread_grp_fu_215_p0() {
    grp_fu_215_p0 =  (sc_lv<18>) (OP1_V_cast_fu_153_p1.read());
}

void sigmoid_activation_L::thread_grp_fu_215_p1() {
    grp_fu_215_p1 =  (sc_lv<18>) (OP1_V_cast_fu_153_p1.read());
}

void sigmoid_activation_L::thread_i_1_fu_107_p2() {
    i_1_fu_107_p2 = (!i_reg_90.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_90.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void sigmoid_activation_L::thread_input_V_address0() {
    input_V_address0 =  (sc_lv<4>) (tmp_1_fu_113_p1.read());
}

void sigmoid_activation_L::thread_input_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        input_V_ce0 = ap_const_logic_1;
    } else {
        input_V_ce0 = ap_const_logic_0;
    }
}

void sigmoid_activation_L::thread_p_Val2_1_fu_126_p2() {
    p_Val2_1_fu_126_p2 = (!ap_const_lv18_0.is_01() || !p_Val2_s_reg_240.read().is_01())? sc_lv<18>(): (sc_biguint<18>(ap_const_lv18_0) - sc_biguint<18>(p_Val2_s_reg_240.read()));
}

void sigmoid_activation_L::thread_p_Val2_2_fu_131_p3() {
    p_Val2_2_fu_131_p3 = (!tmp_2_reg_246.read()[0].is_01())? sc_lv<18>(): ((tmp_2_reg_246.read()[0].to_bool())? p_Val2_1_fu_126_p2.read(): p_Val2_s_reg_240.read());
}

void sigmoid_activation_L::thread_p_Val2_3_fu_185_p2() {
    p_Val2_3_fu_185_p2 = (!tmp_4_fu_169_p3.read().is_01() || !tmp_11_cast_fu_176_p4.read().is_01())? sc_lv<28>(): (sc_biguint<28>(tmp_4_fu_169_p3.read()) - sc_biguint<28>(tmp_11_cast_fu_176_p4.read()));
}

void sigmoid_activation_L::thread_p_Val2_4_fu_201_p3() {
    p_Val2_4_fu_201_p3 = (!tmp_7_reg_256.read()[0].is_01())? sc_lv<18>(): ((tmp_7_reg_256.read()[0].to_bool())? ap_const_lv18_10000: tmp_9_fu_191_p4.read());
}

void sigmoid_activation_L::thread_p_Val2_5_fu_163_p2() {
    p_Val2_5_fu_163_p2 = (!tmp_s_fu_156_p3.read().is_01() || !ap_const_lv18_8000.is_01())? sc_lv<18>(): (sc_biguint<18>(tmp_s_fu_156_p3.read()) + sc_biguint<18>(ap_const_lv18_8000));
}

void sigmoid_activation_L::thread_p_Val2_7_fu_209_p2() {
    p_Val2_7_fu_209_p2 = (!ap_const_lv18_10000.is_01() || !p_Val2_4_reg_282.read().is_01())? sc_lv<18>(): (sc_biguint<18>(ap_const_lv18_10000) - sc_biguint<18>(p_Val2_4_reg_282.read()));
}

void sigmoid_activation_L::thread_result_V_addr_gep_fu_82_p3() {
    result_V_addr_gep_fu_82_p3 =  (sc_lv<4>) (tmp_1_reg_229.read());
}

void sigmoid_activation_L::thread_result_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        result_V_address0 = result_V_addr_gep_fu_82_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        result_V_address0 =  (sc_lv<4>) (tmp_1_reg_229.read());
    } else {
        result_V_address0 = "XXXX";
    }
}

void sigmoid_activation_L::thread_result_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        result_V_ce0 = ap_const_logic_1;
    } else {
        result_V_ce0 = ap_const_logic_0;
    }
}

void sigmoid_activation_L::thread_result_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        result_V_d0 = p_Val2_7_fu_209_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        result_V_d0 = p_Val2_4_fu_201_p3.read();
    } else {
        result_V_d0 =  (sc_lv<18>) ("XXXXXXXXXXXXXXXXXX");
    }
}

void sigmoid_activation_L::thread_result_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_246.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_246.read(), ap_const_lv1_1)))) {
        result_V_we0 = ap_const_logic_1;
    } else {
        result_V_we0 = ap_const_logic_0;
    }
}

void sigmoid_activation_L::thread_tmp_11_cast_fu_176_p4() {
    tmp_11_cast_fu_176_p4 = tmp_8_reg_272.read().range(32, 5);
}

void sigmoid_activation_L::thread_tmp_1_fu_113_p1() {
    tmp_1_fu_113_p1 = esl_zext<64,4>(i_reg_90.read());
}

void sigmoid_activation_L::thread_tmp_4_fu_169_p3() {
    tmp_4_fu_169_p3 = esl_concat<18,10>(p_Val2_5_reg_277.read(), ap_const_lv10_0);
}

void sigmoid_activation_L::thread_tmp_7_fu_137_p2() {
    tmp_7_fu_137_p2 = (!p_Val2_2_fu_131_p3.read().is_01() || !ap_const_lv18_8000.is_01())? sc_lv<1>(): (sc_bigint<18>(p_Val2_2_fu_131_p3.read()) > sc_bigint<18>(ap_const_lv18_8000));
}

void sigmoid_activation_L::thread_tmp_9_fu_191_p4() {
    tmp_9_fu_191_p4 = p_Val2_3_fu_185_p2.read().range(27, 10);
}

void sigmoid_activation_L::thread_tmp_fu_101_p2() {
    tmp_fu_101_p2 = (!i_reg_90.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_90.read() == ap_const_lv4_A);
}

void sigmoid_activation_L::thread_tmp_s_fu_156_p3() {
    tmp_s_fu_156_p3 = esl_concat<15,3>(tmp_3_reg_261.read(), ap_const_lv3_0);
}

void sigmoid_activation_L::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_fu_101_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

}

